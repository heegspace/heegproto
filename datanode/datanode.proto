syntax  =  "proto3";
package datanode;
import "rescode/rescode.proto";
import "common/common.proto";

option go_package="./datanode";

message User{
    int64    uid = 1;
    string   phone = 2;
    string   email = 3;
    string   account = 4;
    string   pass_wd = 5;
    int32    status = 6;
    int64    role = 7;
    int64    vip = 8;
    double   coin = 9;
    int64    reg_ip = 10;
    string  reg_at = 11;
}

message UserInfoReq {
    int64    uid = 1;
    map<string,string> extra = 2;
}

message NewUserReq {
    string    account = 1;
    string    pass_wd = 2;
    int32     role = 3;     
    string    invitor = 4;
    string    source = 5;
    string    contactor = 6;
    string    email = 7;
    int64     reg_ip = 8;
    int64     status = 9;
    map<string,string> extra = 10;
}

message SearchUserReq {
    repeated int64    uids = 1;
    string            account = 2;
    string            phone = 3;
    string            email = 4;
    map<string,string> extra = 5;
}

message SearchUserRes {
    repeated    User    users  =  1;
    map<string,string>  extra  =  2;
}

message UserRes {
    rescode.Code      rescode = 1;
    string            resmsg = 2;
    User              user = 3;
    map<string,string> extra = 4;
}

message AddFriendReq {
    int64                   uid  =  1;
    string                  phone = 2;
    map<string,string>      extra = 3;
}

message AddFriendRes {
    rescode.Code    rescode = 1;
    string          resmsg = 2;
    map<string,string> extra = 3;
}

message AgreeFriendReq {
    int64               uid1  =  1;
    int64               uid2  =  2;
    map<string,string> extra  =  3;
}

message FriendsListReq {
    int64               uid1  =  1;
    int64               uid2  =  2;
    map<string,string> extra  =  3;
}

message AgreeFriendRes {
    rescode.Code      rescode = 1;
    string            resmsg = 2;
    map<string,string> extra = 3;
}

message FriendItem {
    int64      uid = 1;
    string    note = 2;
    string    account = 3;
    string    nick_name = 4;
    string    avatar = 5;
    string    brithday = 6;
    int64     join_at = 7;
}

message Fgroup {
    int64             sort = 1;
    string            name = 2;
    repeated FriendItem lists = 3;
}

message friend {
    int64                   total = 1;
    repeated Fgroup          data = 2;
    repeated FriendItem    invite = 3;
    repeated FriendItem    blacks = 4;
}

message FriendRes {
    rescode.Code          rescode = 1;
    string                resmsg = 2;
    friend                friends = 3;
    map<string,string>    extra = 4;
}

message CreateGroupReq {
    int64       uid  =  1;
    string    name = 2;
    map<string,string> extra = 3;
}

message CreateGroupRes {
    rescode.Code      rescode = 1;
    string            resmsg = 2;
    map<string,string> extra = 3;
}

message RenameGroupReq {
    int64       uid  =  1;
    string    old_name = 2;
    string    new_name = 3;
    map<string,string> extra = 4;
}

message RenameGroupRes {
    rescode.Code      rescode = 1;
    string            resmsg = 2;
    map<string,string> extra = 3;
}

message AddFriendNoteReq {
    int64               uid1  =  1;
    int64             uid2  =  2;
    string            note = 3;
    map<string,string> extra = 4;
}

message AddFriendNoteRes {
    rescode.Code      rescode = 1;
    string            resmsg = 2;
    map<string,string> extra = 3;
}

message MoveGroupReq {
    int64            uid1  =  1;
    int64             uid2 = 2;
    string            group = 3;
    map<string,string> extra = 4;
}

message MoveGroupRes {
    rescode.Code      rescode = 1;
    string            resmsg = 2;
    map<string,string> extra = 3;
}

message RemoveFriendReq {
    int64               uid1  =  1;
    int64              uid = 2;
    map<string,string> extra = 3;
}

message LikesCountReq {
    string          mid  =  1;
    map<string,string>  extra  =  2;
}

message LikesAddReq {
    string          mid  =  1;
    int64           uid  =  2;
    map<string,string> extra  =  3;
}

message LikesListReq {
    string          mid  =  1;
    int32           page  =  2;
    int32           size  =  3;
    map<string,string> extra  =  4;
}

message RemoveFriendRes {
    rescode.Code      rescode = 1;
    string            resmsg = 2;
    map<string,string> extra = 3;
}

message LikesCountRes {
    rescode.Code      rescode = 1;
    int32             count = 2;
    string            resmsg = 3;
    map<string,string> extra = 4;
}

message LikesAddRes {
    rescode.Code      rescode = 1;
    string            resmsg = 2;
    map<string,string> extra = 3;
}

message Likes {
    int64               uid = 1;
    int64               create_at = 2;
}

message LikesListRes {
    rescode.Code      rescode = 1;
    string            resmsg = 2;
    repeated Likes    data = 3;
    map<string,string> extra = 4;
}

message UpdateNoteReq {
    int64             userid  =  1;
    int64             uid = 2;
    string            data = 3;
    string            html = 4;
    repeated string   tag = 5;
    string            bgcolor = 6;
    int64             note_type = 7;
    map<string,string> extra = 8;
}

message NoteMetaRes {
    rescode.Code      rescode = 1;
    string            resmsg = 2;
    common.NoteMeta  meta = 3;
    map<string,string> extra = 4;
}

message NoteMetaListReq {
    int64                 uid = 1;
    int64                 userid = 2;
    string                tag = 3;
    int64                 status = 4;
    int32                 page = 5;
    int32                 size = 6;
    int64                 note_type = 7;
    map<string,string>    extra = 8;
}

message NoteMetaListRes {
    rescode.Code      rescode = 1;
    string            resmsg = 2;
    repeated common.NoteMeta      meta = 3;
    map<string,string> extra = 4;
}

message NoteDataReq {
    int64           uid  =  1;
    int64           nid  =  2;
    map<string,string> extra  =  3;
}

message NoteHtmlReq {
    int64           uid  =  1;
    int64           nid  =  2;
    map<string,string> extra  =  3;
}

message NoteListCountRes {
    rescode.Code      rescode = 1;
    string            resmsg = 2;
    int32             count = 3;
    map<string,string> extra = 4;
}

message NoteDataRes {
    rescode.Code      rescode = 1;
    string            resmsg = 2;
    string            data = 3;
    map<string,string> extra = 4;
}

message NoteHtmlRes {
    rescode.Code      rescode = 1;
    string            resmsg = 2;
    string            data = 3;
    map<string,string> extra = 4;
}

message MomentsCountReq {
    int64           uid  =  1;
    map<string,string> extra  =  2;
}

message MomentsCountRes {
    rescode.Code      rescode = 1;
    string            resmsg = 2;
    int32             count = 3;
    map<string,string> extra = 4;
}

message Extra {
    string path = 1;
    int32 type = 2;
}

message Moments {
    int64   uid  =  1;
    int64     id = 2;
    string    mid = 3;
    string    text = 4;
    repeated Extra extra = 5;
    int32 create_at = 6;
}

message AddMomentsRes {
    rescode.Code      rescode = 1;
    string            resmsg = 2;
}

message MomentsListReq {
    int64          uid  =  1;
    int32           page  =  2;
    int32           size  =  3;
    map<string,string> extra  =  4;
}

message MomentsListRes {
    rescode.Code      rescode = 1;
    string            resmsg = 2;
    repeated Moments  data = 3;
}

message FileItem {
    string    name = 1;
    int32     type = 2;
    string    path = 3;
    int64     size = 4;
    string    url = 5;
    int64     create_at = 6;
    int64     update_at = 7;
    string    extra = 8;
}

message FileDirReq {
    int64       uid  =  1;
    string      path  =  2;
    map<string,string>  extra  =  3;
}

message FileDirRes {
    rescode.Code      rescode = 1;
    string            resmsg = 2;
    repeated FileItem dirs = 3;
}

message AddDirReq {
    int64       uid  =  1;
    string    parent = 2;
    string    name = 3;
}

message AddDirRes {
    rescode.Code  rescode = 1;
    string        resmsg = 2;
}

message AddFileReq {
    int64   uid  =  1;
    int64  size = 2;
    string path = 3;
    string name = 4;
    string url = 5;
    string thumb = 6;
    string content_type = 7;
}

message AddFileRes {
    rescode.Code  rescode = 1;
    string        resmsg = 2;
}

message FileAttrReq {
    int64       uid  =  1;
    map<string,string> extra  =  2;
}


message FileAttrRes {
    rescode.Code  rescode = 1;
    string        resmsg = 2;
    int64         capacity = 3;
    int32         number = 4;
}

message ThumbnailReq {
    int64       uid  =  1;
    string      path  =  2;
    map<string,string> extra  =  3;
}

message ThumbnailRes {
    rescode.Code  rescode = 1;
    string        resmsg = 2;
    string        thumb = 3;
}

message SetKeyvalueReq {
    string        key = 1;
    string        value = 4;
    int64         expire = 3;
}

message SetKeyvalueRes {
    rescode.Code  rescode = 1;
    string        resmsg = 2;
}

message GetKeyvalueReq {
    string        key = 1;
}

message GetKeyvalueRes {
    rescode.Code  rescode = 1;
    string        resmsg = 2;
    string        value = 3;
}

message DelKeyvalueReq {
    string        key = 1;
}

message DelKeyvalueRes {
    rescode.Code  rescode = 1;
    string        resmsg = 2;
}

message VersionRes {
    rescode.Code       rescode = 1;
    string             resmsg = 2;
    repeated common.VersionItem versions = 3;
    map<string,string> extra = 4;
}

message SubjectNameReq {
    string      req  =  1;
    map<string,string>  extra  =  2;
}

message SubjectNameRes {
    rescode.Code       rescode = 1;
    string             resmsg = 2;
    string             name = 3;
    map<string,string> extra = 4;
}

message ChapterResItem {
    string                    uid = 1;
    string                    title = 2;
    repeated common.ChapterItem childs = 3;
}

message ChapterRes {
    rescode.Code          rescode = 1;
    string                resmsg = 2;
    repeated ChapterResItem chapters = 3;
    map<string,string> extra = 4;
}

message SourceRes {
    rescode.Code       rescode = 1;
    string             resmsg = 2;
    repeated common.SourceItem  sources = 4;
    map<string,string> extra = 5;
}

message TixingRes {
    rescode.Code       rescode = 1;
    string             resmsg = 2;
    repeated common.TixingItem  tixings = 3;
    map<string,string> extra = 4;
}

message TimuCountRes {
    rescode.Code       rescode = 1;
    string             resmsg = 2;
    int32                count = 3;
    map<string,string> extra = 4;
}

message TimuAddReq {
    int64                     uid = 1;
    common.AddTimuItem      timus = 2;
    map<string,string>        extra = 3;
}

message TimuAddRes {
    rescode.Code       rescode = 1;
    string             resmsg = 2;
    map<string,string> extra = 3;
}

message TimuRes {
    rescode.Code       rescode = 1;
    string             resmsg = 2;
    repeated common.TimuItem    timus = 3;
    map<string,string> extra = 4;
}

message TimuByIdReq {
    int64                 uid = 1;    // 用户id
    string                tid = 2;    // 题目id
    map<string,string>    extra = 3;
}

message TimuByIdRes {
    rescode.Code       rescode = 1;
    string             resmsg = 2;
    common.TimuItem   timus = 3;
    map<string,string> extra = 4;
}

message CollectReq {
    int64               uid  =  1;
    string              cid = 2;
    int64               op = 3;
    map<string,string> extra = 4;
}

message CollectRes {
    rescode.Code       rescode = 1;
    string             resmsg = 2;
    map<string,string> extra = 3;
}

message CollectListReq {
    int64       uid = 1;
    int32       page = 2;
    int32       size = 3;
}

message CollectListRes {
    rescode.Code       rescode = 1;
    string             resmsg = 2;
    repeated common.TimuItem    timus = 3;
    map<string,string> extra = 4;
}

message ModifyReq {
    int64             uid = 1;
    string            tid = 2;
    common.Question   timu = 3;
}

message ModifyRes {
    rescode.Code       rescode = 1;
    string             resmsg = 2;
    map<string,string> extra = 3;
}

message ModifyListReq {
    int64       uid = 1;
    int32       page = 2;
    int32       size = 3;
    string    sorted = 4;
    string    status = 5;
}

message ModifyListRes {
    rescode.Code       rescode = 1;
    string             resmsg = 2;
    repeated common.ModifyItem    timus = 3;
    map<string,string> extra = 4;
}

message ModifyCountReq {
    int64     uid = 1;
    string    status = 2;
    map<string,string> extra = 3; 
}

message ModifyCountRes {
    rescode.Code       rescode = 1;
    string             resmsg = 2;
    int32              count = 3;
    map<string,string> extra = 4; 
}

message ApproveReq {
    int64                 id = 1;
    int64                 uid = 2;
    string                status = 3;
    string                info = 4;
    common.ApproveDest   dest = 5;
    map<string,string>    extra = 6; 
}

message ApproveRes {
    rescode.Code       rescode = 1;
    string             resmsg = 2;
    map<string,string> extra = 3; 
}

message SearchReq {
    string        keyword = 1;
    int64         uid = 2;
    common.SearchTyle   style = 3;
    int32           page = 4;
    int32           size = 5;
}

message SearchRes {
    rescode.Code                  rescode = 1;
    string                        resmsg = 2;
    double                        timestamp = 3;
    common.SearchHitsTotal      total = 4;
    repeated common.SearchHitsItem    hits = 5;
    map<string,string> extra = 6;
}

message AddGradeCateRes {
    rescode.Code      rescode = 1;
    string            resmsg = 2;
}

message GradeCateCountRes {
    rescode.Code      rescode = 1;
    string            resmsg = 2;
    int64               count = 3;
    map<string,string> extra = 4;
}

message GradeCateListReq {
    int32       page = 1;
    int32       size = 2;
    map<string,string> extra = 3;
}

message GradeCateListRes {
    rescode.Code              rescode = 1;
    string                    resmsg = 2;
    repeated common.GradeCate lists = 3;
    map<string,string>        extra = 4;
}

message HomeBlackDataRes {
    rescode.Code              rescode = 1;
    string                    resmsg = 2;
    repeated common.SchoolStatic lists = 3;
    map<string,string>        extra = 4;
}

message GradeSubjectReq {
    int32              index = 1;
    map<string,string> extra = 2;
}

message GradeSubjectRes {
    rescode.Code              rescode = 1;
    string                    resmsg = 2;
    repeated common.GradeSubject lists = 3;
    map<string,string>        extra = 4;
}

message SchoolRollAddRes {
    rescode.Code      rescode = 1;
    string            resmsg = 2;
}

message SchoolRollCountRes {
    rescode.Code      rescode = 1;
    string            resmsg = 2;
    int64             count = 3;
}

message SchoolRollListReq {
    int32   page = 1;
    int32   size = 2;
    map<string,string> extra = 3;
}

message SchoolRollListRes {
    rescode.Code              rescode = 1;
    string                    resmsg = 2;
    repeated common.SchoolRoll  lists = 3;
    map<string,string>        extra = 4;
}

message SubjectCateAddRes {
    rescode.Code      rescode = 1;
    string            resmsg = 2;
}

message SubjectCateCountRes {
    rescode.Code      rescode = 1;
    string            resmsg = 2;
    int64               count = 3;
}

message SubjectCateListReq {
    int32   page = 1;
    int32   size = 2;
    map<string,string> extra = 3;
}

message SubjectCateListRes {
    rescode.Code              rescode = 1;
    string                    resmsg = 2;
    repeated common.SubjectCate  lists = 3;
    map<string,string>        extra = 4;
}

message AttentionItem {
    int64     id = 1;
    string    name = 2;
    string    desc = 3;
    int64     create_at = 4;
}

message AddAttentionReq {
    AttentionItem        item = 1;
    map<string,string>    extra = 2;
}

message AddAttentionRes {
    rescode.Code              rescode = 1;
    string                    resmsg = 2;
    map<string,string>        extra = 3;
}

message DelAttentionReq {
    int64                 aid = 1;
    map<string,string>    extra = 2;
}

message DelAttentionRes {
    rescode.Code              rescode = 1;
    string                    resmsg = 2;
    map<string,string>        extra = 3;
}

message GetAttentionReq {
    int64           aid = 1;
    int32           page = 2;
    int32           size = 3;
    map<string,string> extra = 4;
}

message GetAttentionRes {
    rescode.Code              rescode = 1;
    string                    resmsg = 2;
    repeated AttentionItem   lists = 3;
    map<string,string>        extra = 4;
}

message AddUserAttentionReq {
    int64           aid = 1;
    int64           uid = 2;
    map<string,string> extra = 3;
}

message AddUserAttentionRes {
    rescode.Code              rescode = 1;
    string                    resmsg = 2;
    map<string,string>        extra = 3;
}

message GetUserAttentionReq {
    int64                 uid = 1;
    map<string,string>    extra = 2;
}

message GetUserAttentionRes {
    rescode.Code              rescode = 1;
    string                    resmsg = 2;
    repeated AttentionItem   lists = 3;
    map<string,string>        extra = 4;
}

message DelUserAttentionReq {
    int64           aid = 1;
    int64           uid = 2;
    map<string,string> extra = 3;
}

message DelUserAttentionRes {
    rescode.Code              rescode = 1;
    string                    resmsg = 2;
    map<string,string>        extra = 3;
}

message SetUserInfoReq {
    int64                     uid = 1;
    common.UserInfo          info = 2;
    map<string,string>        extra = 3;
}

message SetUserInfoRes {
    rescode.Code              rescode = 1;
    string                    resmsg = 2;
    map<string,string>        extra = 3;
}

message GetUserInfoReq {
    int64                     uid = 1;
    map<string,string>        extra = 2;
}

message GetUserInfoRes {
    rescode.Code              rescode = 1;
    string                    resmsg = 2;
    common.UserInfo          info = 3;
    map<string,string>        extra = 4;
}

message SetWechatUinfoReq {
    int64                     uid = 1;
    common.WechatUserinfo    info = 2;
    map<string,string>        extra = 3;
}

message SetWechatUinfoRes {
    rescode.Code              rescode = 1;
    string                    resmsg = 2;
    map<string,string>        extra = 3;
}

message GetWechatUinfoReq {
    int64                     uid = 1;
    map<string,string>        extra = 2;
}

message GetWechatUinfoRes {
    rescode.Code              rescode = 1;
    string                    resmsg = 2;
    common.WechatUserinfo    info = 3;
    map<string,string>        extra = 4;
}

message SetAlipayUinfoReq {
    int64                     uid = 1;
    common.AlipayUserinfo    info = 2;
    map<string,string>        extra = 3;
}

message SetAlipayUinfoRes {
    rescode.Code              rescode = 1;
    string                    resmsg = 2;
    map<string,string>        extra = 3;
}

message GetAlipayUinfoReq {
    int64                     uid = 1;
    map<string,string>        extra = 2;
}

message GetAlipayUinfoRes {
    rescode.Code              rescode = 1;
    string                    resmsg = 2;
    common.AlipayUserinfo    info = 3;
    map<string,string>        extra = 4;
}

message SetBaiduEntityReq {
    string                    bid = 1;
    repeated common.BaiduEntity entitys = 2;
    map<string,string>        extra = 3;
}

message SetBaiduEntityRes {
    rescode.Code              rescode = 1;
    string                    resmsg = 2;
    map<string,string>        extra = 3;
}

message BaiduEntityReq {
    string                    bid = 1;
    int64                     page = 2;
    int64                     size = 3;
    map<string,string>        extra = 4;
}

message BaiduEntityRes {
    rescode.Code              rescode = 1;
    string                    resmsg = 2;
    int64                     page = 3;
    int64                     size = 4;
    repeated common.BaiduEntity entitys = 5;
    map<string,string>        extra = 6;
}

message SearchItemReq {
    string            keyword = 1;
    int32             page = 2;
    int32             size = 3;
    map<string,string> extra = 4;
}

message SearchItemRes {
    rescode.Code                      rescode = 1;
    string                            resmsg = 2;
    repeated string                   lists = 3;
    map<string,string>                extra = 4;
}

message SearchHistoryReq {
    int64           uid = 1;
    int32           page = 2;
    int32           size = 3;
    map<string,string> extra = 4;
}

message SearchHistoryRes {
    rescode.Code                      rescode = 1;
    string                            resmsg = 2;
    repeated common.SearchHistoryItem  lists = 3;
    map<string,string>                extra = 4;
}

message RefreshModifyRewardReq {
    string                auth = 1;
    int64                 id = 2;
    double                reward = 3;
    map<string,string>    extra = 4;
} 

message RefreshModifyRewardRes {
    rescode.Code          rescode = 1;
    string                resmsg = 2;
    string                code = 3;
    map<string,string>    extra = 4;
}

message RefreshUserCoinReq {
    string                auth = 1;
    int64                 userid = 2;
    double                coin = 3;
    map<string,string>    extra = 4;
}

message RefreshUserCoinRes {
    rescode.Code          rescode = 1;
    string                resmsg = 2;
    string                code = 3;
    map<string,string>    extra = 4;
}

message AddQuestionReq {
    int64                   uid = 1;
    common.AddTimuItem  timu = 2;
}

message AddQuestionRes {
    rescode.Code          rescode = 1;
    string                resmsg = 2;
    string                code = 3;
    map<string,string>    extra = 4;
}

message AddListReq {
    int64       uid = 1;
    int32       page = 2;
    int32       size = 3;
    string    sorted = 4;
    string    status = 5;
}

message AddListRes {
    rescode.Code                  rescode = 1;
    string                        resmsg = 2;
    repeated common.AddTimuItem timus = 3;
    map<string,string>            extra = 4;
}

message AddCountReq {
    int64     uid = 1;
    string    status = 2;
    map<string,string> extra = 3;
}

message AddCountRes {
    rescode.Code       rescode = 1;
    string             resmsg = 2;
    int32              count = 3;
    map<string,string> extra = 4;
}


message RefreshAddRewardReq {
    string                auth = 1;
    int64                 id = 2;
    double                reward = 3;
    map<string,string>    extra = 4;
} 

message RefreshAddRewardRes {
    rescode.Code          rescode = 1;
    string                resmsg = 2;
    string                code = 3;
    map<string,string>    extra = 4;
}

message TixingByVidReq {
    string                vid = 1;
    map<string,string>    extra = 2;
}

message TixingByVidRes {
    rescode.Code          rescode = 1;
    string                resmsg = 2;
    repeated string       tixings = 3;
    map<string,string>    extra = 4;
}

message SourceByVidReq {
    string                vid = 1;
    map<string,string>    extra = 2;
}

message SourceByVidRes {
    rescode.Code          rescode = 1;
    string                resmsg = 2;
    repeated string       sources = 3;
    map<string,string>    extra = 4;
}

message IdentAddReq {
    int64                             uid = 1;
    string                            log_id = 2;
    common.BaiduDocAnalysis         result = 3;
    map<string,string>                extra = 4;
}

message IdentAddRes {
    rescode.Code          rescode = 1;
    string                resmsg = 2;
    map<string,string>    extra = 3;
}

message IdentByIidReq {
   int64                  uid = 1;
   string                 iid = 2; 
   map<string,string>     extra = 3;
}

message IdentByIidRes {
    rescode.Code              rescode = 1;
    string                    resmsg = 2;
    common.BaiduIdentItem  result = 3;
    map<string,string>        extra = 4;
}

message IdentListReq {
    int64       uid = 1;
    int32       page = 2;
    int32       size = 3;
    string    sorted = 4;
    string    status = 5;
    string    iid = 6;
    string    sign = 7;
}

message IdentListRes {
    rescode.Code                      rescode = 1;
    string                            resmsg = 2;
    repeated common.BaiduIdentItem  results = 3;
    map<string,string>                extra = 4;
}

message IdentCountReq {
    int64     uid = 1;
    string    status = 2;
    map<string,string> extra = 3; 
}

message IdentCountRes {
    rescode.Code       rescode = 1;
    string             resmsg = 2;
    int32              count = 3;
    map<string,string> extra = 4; 
}

message RefreshIdentRewardReq {
    string                auth = 1;
    string                iid = 2;
    double                reward = 3;
    map<string,string>    extra = 4;
} 

message RefreshIdentRewardRes {
    rescode.Code          rescode = 1;
    string                resmsg = 2;
    string                code = 3;
    map<string,string>    extra = 4;
}

message TeacherItem {
    int64                 uid = 1;
    string                tag = 2;
    string                resume = 3;
    string                subject = 4;
    int32                 status = 5;
    int64                 tmlong = 6;
}

message UpdateTeacherReq {
    TeacherItem          teacher = 1;
    map<string,string>    extra = 2;
}

message UpdateTeacherRes {
    rescode.Code       rescode = 1;
    string             resmsg = 2;
    map<string,string> extra = 3;
}

message FindTeacherReq {
    int64               tuid = 1;
    int64               uuid = 2;
    string            subject = 3;
    int32               page = 4;
    int32               size = 5;
    string            sorted = 6;
}

message FindTeacherRes {
    rescode.Code       rescode = 1;
    string             resmsg = 2;
    repeated TeacherItem teachers = 3;
    map<string,string> extra = 4;
}

message FocusTeacherReq {
    int64                 tuid = 1;
    int64                 uuid = 2;
    int32                 status = 3;
    map<string,string>    extra = 4;
}

message FocusTeacherRes {
    rescode.Code       rescode = 1;
    string             resmsg = 2;
    map<string,string> extra = 3;
}

message NoteCooperReq {
    int64                 nid = 1;
    int64                 userid = 2;
    repeated string       user = 3;
    map<string,string>    extra = 4;
}

message NoteCooperRes {
    rescode.Code              rescode = 1;
    string                    resmsg = 2;
    repeated common.UserInfo user = 3;
    map<string,string>        extra = 4;
}

message NoteTagReq {
    int64                 nid = 1;
    int64                 userid = 2;
    repeated string       tags = 3;
    map<string,string>    extra = 4;
}

message NoteTagRes {
    rescode.Code      rescode = 1;
    string            resmsg = 2;
    repeated string   tags = 3;
    map<string,string> extra = 4;
}

message NoteBgcolorReq {
    int64                 nid = 1;
    int64                 userid = 2;
    string                bgcolor = 3;
    map<string,string>    extra = 4;
} 

message NoteBgcolorRes {
    rescode.Code      rescode = 1;
    string            resmsg = 2;
    string            bgcolor = 3;
    map<string,string> extra = 4;
}

message NoteTagAddReq {
    int64                 userid = 1;
    string                cn = 2;
    string                eg = 3;
    map<string,string>    extra = 4;
}

message NoteTagAddRes {
    rescode.Code      rescode = 1;
    string            resmsg = 2;
    map<string,string> extra = 3;
}

message NoteTagListReq {
    int64                 user_id = 1;
    string                lang = 2;
    int64                 status = 3;
    int32                 page = 4;
    int32                 size = 5;
    map<string,string>    extra = 6;
}

message NoteTagListRes {
    rescode.Code              rescode = 1;
    string                    resmsg = 2;
    repeated common.NoteTag  tags = 3;
    map<string,string>        extra = 4;
}

message SubmitCertReq {
    common.PersonCert    cert = 1;
    map<string,string>    extra = 2;
}

message SubmitCertRes {
    rescode.Code          rescode = 1;
    string                resmsg = 2;
    map<string,string>    extra = 3;
}

message CertStatusReq {
    int64                 uid = 1;
    int64                 cert_uid = 2;
    string                cert_name = 3;
    string                status = 4;
    string                info = 5;
    map<string,string>    extra = 6;
}

message CertStatusRes {
    rescode.Code          rescode = 1;
    string                resmsg = 2;
    common.PersonCert    cert = 3;
    map<string,string>    extra = 4;
}

message CertInfoReq {
    int64                 uid = 1;
    string                status = 2;
    string                idname = 3;
    string                idnum = 4;
    int32                 page = 5;
    int32                 size = 6;
    map<string,string>    extra = 7;
}

message CertInfoRes {
    rescode.Code              rescode = 1;
    string                    resmsg = 2;
    repeated common.PersonCert  cert = 3;
    map<string,string>        extra = 4;
}

message CertFlowReq {
    int64                   uid = 1;
    int32                   page = 2;
    int32                   size = 3;
    map<string,string>    extra = 4;
}

message CertFlowRes {
    rescode.Code              rescode = 1;
    string                    resmsg = 2;
    repeated common.PersonCert  cert = 3;
    map<string,string>        extra = 4;
}

message AddUserLogReq {
    int64                 uid = 1;
    int32                 log_type = 2;
    string                log_info = 3;
    string                create_at = 4;
    map<string,string>    extra = 5;
}

message AddUserLogRes {
    rescode.Code              rescode = 1;
    string                    resmsg = 2;
    map<string,string>        extra = 3;
}

message QueryUserLogReq {
    int64                 id = 1;
    int64                 uid = 2;
    int32                 log_type = 3;
    int32                 page = 4;
    int32                 size = 5;
    map<string,string>    extra = 6;
}

message QueryUserLogRes {
    rescode.Code              rescode = 1;
    string                    resmsg = 2;
    repeated common.UserLog  logs = 3;
    map<string,string>        extra = 4;
}

message UserLogCountReq {
    int64                 uid = 1;
    int32                 log_type = 2;
    map<string,string>    extra = 3;
}

message UserLogCountRes {
    rescode.Code              rescode = 1;
    string                    resmsg = 2;
    int64                     count = 3;
    map<string,string>        extra = 4;
}


message AddTaskReq {
    common.CronItem      cron = 1;
    string                admin = 2;
    map<string,string>    extra = 3;
}

message AddTaskRes {
    rescode.Code          rescode = 1;
    string                resmsg = 2;
    map<string,string>    extra = 3;
}

message GetTaskReq {
    bool                  repeated = 1;
    bool                  mutitask = 2;
    string                start_at = 3;
    map<string,string>    extra = 4;
}

message GetTaskRes {
    rescode.Code              rescode = 1;
    string                    resmsg = 2;
    repeated common.CronItem crons = 3;
    map<string,string>        extra = 4;
}

message GetTaskCountReq {
    bool                  repeated = 1;
    bool                  mutitask = 2;
    string                start_at = 3;
    map<string,string>    extra = 4;
}

message GetTaskCountRes {
    rescode.Code              rescode = 1;
    string                    resmsg = 2;
    int64                     count = 3;
    map<string,string>        extra = 4;
}

message UpdateUserinfoReq {
    common.UpdateUserinfoItem       info = 1;
    map<string,string>                extra = 2;
}

message UpdateUserinfoRes {
    rescode.Code              rescode = 1;
    string                    resmsg = 2;
    string                    value = 3;
    map<string,string>        extra = 4;
}


message AddPkgReq {
    string                name  = 1;
    string                version = 2;
    string                address = 3;
    map<string,string>    extra = 4;
}

message AddPkgRes {
    rescode.Code        rescode = 1;
    string              resmsg = 2;
    map<string,string>  extra = 3;
}

message DelPkgReq {
    string                name  = 1;
    string                version = 2;
    map<string,string>    extra = 3;
}

message DelPkgRes {
    rescode.Code        rescode = 1;
    string              resmsg = 2;
    map<string,string>  extra = 3;
}

message PkgListReq {
    string                name = 1;
    int64                 page = 2;
    int64                 size = 3;
    map<string,string>    extra = 4;
}

message PkgListRes {
    rescode.Code                rescode = 1;
    string                      resmsg = 2;
    repeated common.PkgItem  version = 3;
    map<string,string>          extra = 4;
}

message PkgCountReq {
    string                name = 1;
    map<string,string>    extra = 2;
}

message PkgCountRes {
    rescode.Code        rescode = 1;
    string              resmsg = 2;
    int64               count = 3;
    map<string,string>  extra = 4;
}

message SponsorAddReq {
    common.SponsorItem    sponsor = 1;
    map<string,string>    extra = 2;
}

message SponsorAddRes {
    rescode.Code        rescode = 1;
    string              resmsg = 2;
    map<string,string>  extra = 3;
}

message SponsorListReq {
    int32                 page = 1;
    int32                 size = 2;
    int64                 uid = 3;
    map<string,string>    extra = 4;
}

message SponsorListRes {
    rescode.Code                rescode = 1;
    string                      resmsg = 2;
    repeated common.SponsorItem lists = 3;
    map<string,string>          extra = 4;
}

message VipLimitReq {
    int32                 vip = 1;      // 等级
    int32                 type = 2;     // 限制类型  0:修改试题  1:添加试题  2:浏览试题  3:下载试题
    map<string,string>    extra = 3;
}

message VipLimitRes {
    rescode.Code                rescode = 1;
    string                      resmsg = 2;
    int64                       limit = 3;
    map<string,string>          extra = 4;
}

message VipProductReq {
    int32                       page = 1;
    int32                       size = 2;
    common.VipProduct           products = 3;
    map<string,string>          extra = 4;
}

message VipProductRes {
    rescode.Code                rescode = 1;
    string                      resmsg = 2;
    repeated common.VipProduct  products = 3;
    map<string,string>          extra = 4;
}

message VipPayReq {
    common.PayOrder             order = 1;
    map<string,string>          extra = 2;
}

message VipPayRes {
    rescode.Code                rescode = 1;
    string                      resmsg = 2;
    common.PayOrder             order = 3;
    map<string,string>          extra = 4;
}

message VipOrderStatusReq {
    common.PayOrder             order = 1;
    map<string,string>          extra = 2;
}

message VipOrderStatusRes {
    rescode.Code                rescode = 1;
    string                      resmsg = 2;
    common.PayOrder             order = 3;
    map<string,string>          extra = 4;
}

message VipOrderListReq {
    common.PayOrder             order = 1;
    int32                       page = 2;
    int32                       size = 3;
    map<string,string>          extra = 4;
}

message VipOrderListRes {
    rescode.Code                rescode = 1;
    string                      resmsg = 2;
    repeated common.PayOrder    order = 3;
    map<string,string>          extra = 4;
}

message UserScoreReq {
    string                      auth = 1;
    int32                       op = 2;     // 操作  0:获取 1:添加  2:更新
    common.UserScore            score = 3;
    map<string, string>         extra = 4;
}

message UserScoreRes {
    rescode.Code                rescode = 1;
    string                      resmsg = 2;
    common.UserScore            score = 3;
    map<string,string>          extra = 4;
}

message UserVipReq {
    string                      auth = 1;
    int32                       op = 2;     // 操作  0:获取 1:添加/更新
    common.UserVip              vip = 3;
    map<string, string>         extra = 4;
}

message UserVipRes {
    rescode.Code                rescode = 1;
    string                      resmsg = 2;
    common.UserVip              vip = 3;
    map<string,string>          extra = 4;
}

message VipDescReq {
    int32                       op = 1;     // 操作  0:获取 1:添加/更新
    common.VipDesc              desc = 2;
    map<string, string>         extra = 3;
}

message VipDescRes {
    rescode.Code                rescode = 1;
    string                      resmsg = 2;
    common.VipDesc              desc = 3;
    map<string,string>          extra = 4;
}

message FootLogReq {
    int32                       op = 1;     // 操作  0:获取 1:添加/更新
    common.FootLog              foot_log = 2;
    int32                       page = 3;
    int32                       size = 4;
    map<string,string>          extra = 5;
}

message FootLogRes {
    rescode.Code                rescode = 1;
    string                      resmsg = 2;
    repeated common.FootLog     desc = 3;
    map<string,string>          extra = 4;
}

message AddExamReq {
    common.ExamItem             exam = 1;
    map<string,string>          extra = 2;
}

message AddExamRes {
    rescode.Code                rescode = 1;
    string                      resmsg = 2;
    repeated common.FootLog     desc = 3;
    map<string,string>          extra = 4;
}

message ExamListReq {
    common.ReqExam              req = 1;
    map<string,string>          extra = 2;
}

message ExamListRes {
    rescode.Code                rescode = 1;
    string                      resmsg = 2;
    repeated common.ExamItem    exams = 3;
    map<string,string>          extra = 4;
}

message ExamCountReq {
    common.ReqExam              req = 1;
    map<string,string>          extra = 2;
}

message ExamCountRes {
    rescode.Code                rescode = 1;
    string                      resmsg = 2;
    int64                       count = 3;
    map<string,string>          extra = 4;
}

message ShareExamReq {
    string                     id = 1;  // 试卷id
    int64                      uid = 2; // 用户uid 
    int64                      expire = 3;
    map<string,string>         extra = 4;
}

message ShareExamRes {
    rescode.Code                rescode = 1;
    string                      resmsg = 2;
    string                      url = 3;
    map<string,string>          extra = 4;
}

message ShareListReq {
    common.ShareType    type = 1;  
    int64               page = 2;
    int64               size = 3;
    string              search = 4;
    map<string,string>  extra = 5;
}

message ShareListRes {
    rescode.Code        rescode = 1;
    string              resmsg = 2;
    repeated string     lists = 3;   // 共享缓存列表
    map<string,string>  extra = 4;
}

message ShareCountReq {
    common.ShareType    type = 1;  
    string              search = 2;
    map<string,string>  extra = 3;
}

message ShareCountRes {
    rescode.Code        rescode = 1;
    string              resmsg = 2;
    int64               count = 3;   // 共享缓存列表
    map<string,string>  extra = 4;
}

service DatanodeService {
	// ---------- 用户接口 ------- //
	// 创建新用户
	rpc  CreateUser(NewUserReq) returns (UserRes) {}
	// 获取用户信息
	rpc  UserInfo(UserInfoReq) returns (UserRes) {}
	// 搜索用户信息
	rpc SearchUser(SearchUserReq) returns (SearchUserRes) {}
	// 更新用户信息
	rpc UpdateUserInfo(UpdateUserinfoReq) returns (UpdateUserinfoRes) {}
	// 关注对象操作
	rpc AddAttention(AddAttentionReq) returns (AddAttentionRes) {}
	rpc DelAttention(DelAttentionReq) returns (DelAttentionRes) {}
	rpc GetAttention(GetAttentionReq) returns (GetAttentionRes) {}
	// 用户
	rpc AddUserAttention(AddUserAttentionReq) returns (AddUserAttentionRes) {}
	rpc DelUserAttention(DelUserAttentionReq) returns (DelUserAttentionRes) {}
	rpc GetUserAttention(GetUserAttentionReq) returns (GetUserAttentionRes) {}
	// --------------- 好友接口 ----------- //
	// 添加好友
	rpc AddFriends(AddFriendReq) returns (AddFriendRes) {}
	// 同意好友
	rpc AgreeFriends(AgreeFriendReq) returns (AgreeFriendRes) {}
	// 请求好友列表
	rpc FriendsList(FriendsListReq) returns (FriendRes) {}
	// 添加组
	rpc CreateGroup(CreateGroupReq) returns (CreateGroupRes) {}
	// 重命名组
	rpc RenameGroup(RenameGroupReq) returns (RenameGroupRes) {}
	// 添加好友备注
	rpc AddNoteFriend(AddFriendNoteReq) returns (AddFriendNoteRes) {}
	// 移动到新的组
	rpc MoveToNewGroup(MoveGroupReq) returns (MoveGroupRes) {}
	// 删除好友
	rpc RemoveFriend(RemoveFriendReq) returns (RemoveFriendRes) {}
	// ----------------- 点赞 --------------- //
	// 获取点赞的数量
	rpc LikesCount(LikesCountReq) returns (LikesCountRes) {}
	// 添加点赞
	rpc LikesAdd(LikesAddReq) returns (LikesAddRes) {}
	// 获取点赞列表
	rpc LikesList(LikesListReq) returns (LikesListRes) {}
	// ----------------- 笔记 ----------------// 
	//更新或者添加笔记信息
	rpc UpdateNote(UpdateNoteReq) returns (NoteMetaRes) {}
	// 获取笔记列表
	rpc NoteMetaList(NoteMetaListReq) returns (NoteMetaListRes) {}
	// 获取用户笔记数量
	rpc NoteListCount(NoteMetaListReq) returns (NoteListCountRes) {}
	// 获取笔记数据列
	rpc NoteData(NoteDataReq) returns (NoteDataRes) {}
	// 获取笔记html数据
	rpc NoteHtml(NoteHtmlReq) returns (NoteHtmlRes) {}
	// ---------------- 动态 --------------- //
	// 获取动态的数量
	rpc MomentsCount(MomentsCountReq) returns (MomentsCountRes) {}
	// 添加动态
	rpc MomentsAdd(Moments) returns (AddMomentsRes) {}
	// 获取动态列表
	rpc MomentsList(MomentsListReq) returns (MomentsListRes) {}
	// ---------------- 文件 ------------------//
	// 获取目录,目录之间的/替换成-
	rpc FileDirOne(FileDirReq) returns (FileDirRes) {}
	// 添加目录
	rpc FileDirAdd(AddDirReq) returns (AddDirRes) {}
	// 添加文件
	rpc AddFile(AddFileReq) returns (AddFileRes) {}
	// 获取云盘属性，容量和文件数量
	rpc YunSaveAttr(FileAttrReq) returns (FileAttrRes) {}
	// 获取图像缩略图
	rpc Thumbnail(ThumbnailReq) returns (ThumbnailRes) {}
	// ------------- key-value ----------------//
	// 设置缓存
	rpc SetKeyValue(SetKeyvalueReq) returns (SetKeyvalueRes) {}
	// 获取缓存
	rpc GetKeyValue(GetKeyvalueReq) returns (GetKeyvalueRes) {}
	// 删除
	rpc DelKeyValue(DelKeyvalueReq) returns (DelKeyvalueRes) {}
	// --------------- 试题相关 -------------------//
	// 获取版本
	rpc QuestionVersion(common.QuestionQuery) returns (VersionRes) {}
	// 获取章节
	rpc QuestionChapter(common.QuestionQuery) returns (ChapterRes) {}
	// 科目名
	rpc SubjectName(SubjectNameReq) returns (SubjectNameRes) {}
	// 获取来源
	rpc QuestionSource(common.QuestionQuery) returns (SourceRes) {}
	// 获取题型
	rpc QuestionTixing(common.QuestionQuery) returns (TixingRes) {}
	// 获取题目数量
	rpc QuestionTimuCount(common.QuestionQuery) returns (TimuCountRes) {}
	// 请求题目
	rpc QuestionTimu(common.QuestionQuery) returns (TimuRes) {}
	// 根据试题id请求题目
	rpc QuestionTimuById(TimuByIdReq) returns (TimuByIdRes) {}
	// 收藏试题
	rpc CollectTimu(CollectReq) returns (CollectRes) {}
	// 获取收藏列表
	rpc QueryCollectTimu(CollectListReq) returns (CollectListRes) {}
	// 纠错试题（包含更新或添加）
	rpc ModifyQuestion(ModifyReq) returns (ModifyRes) {}
	//获取个人纠错的试题
	rpc ModifyList(ModifyListReq) returns (ModifyListRes) {}
	//获取个人纠错的试题的数量
	rpc ModifyCount(ModifyCountReq) returns (ModifyCountRes) {}
	//添加试题
	rpc QuestionTimuAdd(TimuAddReq) returns (TimuAddRes) {}
	//获取添加的试题
	rpc AddList(AddListReq) returns (AddListRes) {}
	// 获取添加的数量
	rpc AddCount(AddCountReq) returns (AddCountRes) {}
	// 审核修改的试题
	rpc Approve(ApproveReq) returns (ApproveRes) {}
	//搜索试题
	rpc OnSearch(SearchReq) returns (SearchRes) {}
	// 添加年纪信息
	rpc GradeCateAdd(common.GradeCate) returns (AddGradeCateRes) {}
	//获取年纪总数
	rpc GradeCateCount(common.Request) returns (GradeCateCountRes) {}
	// 获取年级信息
	rpc GradeCateList(GradeCateListReq) returns (GradeCateListRes) {}
	//获取主页最新动态统计信息
	rpc HomeBlackData(common.Request) returns (HomeBlackDataRes) {}
	//获取学籍对应的年级+科目
	rpc GradeSubject(GradeSubjectReq) returns (GradeSubjectRes) {}
	// 添加学级信息
	rpc SchoolRollAdd(common.SchoolRoll) returns (SchoolRollAddRes) {}
	//获取年级总数
	rpc SchoolRollCount(common.Request) returns (SchoolRollCountRes) {}
	//获取年级列表信息
	rpc SchoolList(SchoolRollListReq) returns (SchoolRollListRes) {}
	//添加科目信息
	rpc SubjectCateAdd(common.SubjectCate) returns (SubjectCateAddRes) {}
	//获取科目总数
	rpc SubjectCateCount(common.Request) returns (SubjectCateCountRes) {}
	//获取科目列表
	rpc SubjectCateList(SubjectCateListReq) returns (SubjectCateListRes) {}
	//用户信息
	rpc SetUserInfo(SetUserInfoReq) returns (SetUserInfoRes) {}
	rpc GetUserInfo(GetUserInfoReq) returns (GetUserInfoRes) {}
	//微信用户信息操作
	rpc SetWechatUinfo(SetWechatUinfoReq) returns (SetWechatUinfoRes) {}
	rpc GetWechatUinfo(GetWechatUinfoReq) returns (GetWechatUinfoRes) {}
	// 支付宝用户信息操作
	rpc SetAlipayUinfo(SetAlipayUinfoReq) returns (SetAlipayUinfoRes) {}
	rpc GetAlipayUinfo(GetAlipayUinfoReq) returns (GetAlipayUinfoRes) {}
	// 请求百度实体信息
	rpc SetBaiduEntity(SetBaiduEntityReq) returns (SetBaiduEntityRes) {}
	rpc BaiduEntity(BaiduEntityReq) returns (BaiduEntityRes) {}
	// 获取搜索记录
	rpc SearchHistory(SearchHistoryReq) returns (SearchHistoryRes) {}
	// 搜索关键字补全
	rpc SearchItem(SearchItemReq) returns (SearchItemRes) {}
	// 更新修改试题的奖励积分
	rpc RefreshModifyReward(RefreshModifyRewardReq) returns (RefreshModifyRewardRes) {}
	// 更新添加试题的奖励积分
	rpc RefreshAddReward(RefreshAddRewardReq) returns (RefreshAddRewardRes) {}
	// 更新用户的coin数值
	rpc RefreshUserCoin(RefreshUserCoinReq) returns (RefreshUserCoinRes) {}
	// 通过版本id获取题型列表
	rpc TixingByVid(TixingByVidReq) returns (TixingByVidRes) {}
	// 通过版本id获取来源
	rpc SourceByVid(SourceByVidReq) returns (SourceByVidRes) {}
	// 添加识别记录
	rpc IdentAdd(IdentAddReq) returns (IdentAddRes) {}
	// 根据识别id获取识别记录
	rpc IdentByIid(IdentByIidReq) returns (IdentByIidRes) {}
	// 获取识别列表
	rpc IdentList(IdentListReq) returns (IdentListRes) {}
	// 获取识别列表熟数量
	rpc IdentCount(IdentCountReq) returns (IdentCountRes) {}
	// 刷新识别奖励
	rpc RefreshIdentReward(RefreshIdentRewardReq) returns (RefreshIdentRewardRes) {}
	// 添加或者根据教师信息
	rpc UpdateTeacher(UpdateTeacherReq) returns (UpdateTeacherRes) {}
	// 查询教师信息
	rpc GetTeacher(FindTeacherReq) returns (FindTeacherRes) {}
	// 关注/取消关注教师
	rpc FocusTeacher(FocusTeacherReq) returns (FocusTeacherRes) {}
	// 更新笔记的协作者、标签、颜色
	rpc NoteCooper(NoteCooperReq) returns (NoteCooperRes) {}
	rpc NoteTag(NoteTagReq) returns (NoteTagRes) {}
	rpc NoteBgcolor(NoteBgcolorReq) returns (NoteBgcolorRes) {}
	rpc NoteTagAdd(NoteTagAddReq) returns (NoteTagAddRes) {}
	rpc NoteTagList(NoteTagListReq) returns (NoteTagListRes) {}
	// 提交实名
	rpc SubmitCert(SubmitCertReq) returns (SubmitCertRes) {}
	// 更新实名状态
	rpc CertStatus(CertStatusReq) returns (CertStatusRes) {}
	// 获取实名信息
	rpc CertInfo(CertInfoReq) returns (CertInfoRes) {}
	// 实名日志记录
	rpc CertFlow(CertFlowReq) returns (CertFlowRes) {}
	// 添加日志
	rpc AddUserLog(AddUserLogReq) returns (AddUserLogRes) {}
	// 获取日志
	rpc QueryUserLog(QueryUserLogReq) returns (QueryUserLogRes) {}
	// 日志数量
	rpc UserLogCount(UserLogCountReq) returns (UserLogCountRes) {}
	// 添加任务
	rpc AddTask(AddTaskReq) returns (AddTaskRes) {}
	// 获取任务
	rpc GetTask(GetTaskReq) returns (GetTaskRes) {}
	// 获取任务数量
	rpc GetTaskCount(GetTaskCountReq) returns (GetTaskCountRes) {}
    // 添加包信息
    rpc  AddPkg(AddPkgReq) returns(AddPkgRes){}
    // 删除包
    rpc  DelPkg(DelPkgReq) returns(DelPkgRes){}
    // 获取包列表
    rpc  PkgLists(PkgListReq) returns(PkgListRes){}
    // 获取包数量
    rpc  PkgCount(PkgCountReq) returns(PkgCountRes) {}

    // 添加赞助信息
    rpc  SponsorAdd(SponsorAddReq) returns(SponsorAddRes){}
    // 获取赞助列表
    rpc  SponsorList(SponsorListReq) returns(SponsorListRes){}

    // 获取vip对应的限制
    rpc VipLimit(VipLimitReq) returns (VipLimitRes) {}

    // vip产品列表
    rpc VipProduct(VipProductReq) returns (VipProductRes) {}
    // vip产品介绍
    rpc VipDesc(VipDescReq) returns (VipDescRes) {}
    // vip充值
    rpc VipPay(VipPayReq) returns (VipPayRes) {}
    // 更新vip充值状态
    rpc VipOrderStatus(VipOrderStatusReq) returns (VipOrderStatusRes) {}
    // 获取vip充值列表
    rpc VipOrderList(VipOrderListReq) returns (VipOrderListRes) {}
    // 用户积分操作
    rpc UserScore(UserScoreReq) returns (UserScoreRes) {}
    // 用户vip操作
    rpc UserVip(UserVipReq) returns (UserVipRes) {}

    // 服务调用日志
    rpc FootLog(FootLogReq) returns (FootLogRes) {}

    // 添加试题
    rpc AddExam(AddExamReq) returns (AddExamRes) {}
    // 获取试卷列表
    rpc ExamLists(ExamListReq) returns (ExamListRes) {}
    // 获取试卷数量
    rpc ExamCount(ExamCountReq) returns (ExamCountRes) {}
    // 共享试卷
    rpc ShareExam(ShareExamReq) returns (ShareExamRes) {}
    // 获取共享列表信息
    rpc ShareList(ShareListReq) returns (ShareListRes) {}
    // 获取共享数量
    rpc ShareCount(ShareCountReq) returns (ShareCountRes) {}
}
