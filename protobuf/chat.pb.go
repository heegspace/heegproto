// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: chat.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 聊天数据类型
type Chat_Type int32

const (
	Chat_Type_NONE          Chat_Type = 0  // 无法识别
	Chat_Type_TEXT          Chat_Type = 1  // 文本
	Chat_Type_IMAGE         Chat_Type = 2  // 图像数据
	Chat_Type_IMAGE_URL     Chat_Type = 3  // 图像url地址
	Chat_Type_IMAGE_BASE64  Chat_Type = 4  // 图像bas64编码
	Chat_Type_SOUND         Chat_Type = 5  // 音频数据
	Chat_Type_SOUND_URL     Chat_Type = 6  // 音频地址
	Chat_Type_VIDEO         Chat_Type = 7  // 视频数据
	Chat_Type_VIDEO_URL     Chat_Type = 8  // 视频地址
	Chat_Type_HTML          Chat_Type = 9  // html数据
	Chat_Type_HTML_URL      Chat_Type = 10 // html url地址
	Chat_Type_EMOJII        Chat_Type = 11 // 表情数据
	Chat_Type_EMOJII_URL    Chat_Type = 12 // 表情url
	Chat_Type_EMOJII_BASE64 Chat_Type = 13 // 表情base64编码数据
)

// Enum value maps for Chat_Type.
var (
	Chat_Type_name = map[int32]string{
		0:  "NONE",
		1:  "TEXT",
		2:  "IMAGE",
		3:  "IMAGE_URL",
		4:  "IMAGE_BASE64",
		5:  "SOUND",
		6:  "SOUND_URL",
		7:  "VIDEO",
		8:  "VIDEO_URL",
		9:  "HTML",
		10: "HTML_URL",
		11: "EMOJII",
		12: "EMOJII_URL",
		13: "EMOJII_BASE64",
	}
	Chat_Type_value = map[string]int32{
		"NONE":          0,
		"TEXT":          1,
		"IMAGE":         2,
		"IMAGE_URL":     3,
		"IMAGE_BASE64":  4,
		"SOUND":         5,
		"SOUND_URL":     6,
		"VIDEO":         7,
		"VIDEO_URL":     8,
		"HTML":          9,
		"HTML_URL":      10,
		"EMOJII":        11,
		"EMOJII_URL":    12,
		"EMOJII_BASE64": 13,
	}
)

func (x Chat_Type) Enum() *Chat_Type {
	p := new(Chat_Type)
	*p = x
	return p
}

func (x Chat_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Chat_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_proto_enumTypes[0].Descriptor()
}

func (Chat_Type) Type() protoreflect.EnumType {
	return &file_chat_proto_enumTypes[0]
}

func (x Chat_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Chat_Type.Descriptor instead.
func (Chat_Type) EnumDescriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{0}
}

// 发送消息
type SendChat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  int32  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`   // 消息类型
	Touid int64  `protobuf:"varint,2,opt,name=touid,proto3" json:"touid,omitempty"` // 目标id
	To    string `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`        // 目标
	Data  []byte `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`    // 发送数据
}

func (x *SendChat) Reset() {
	*x = SendChat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendChat) ProtoMessage() {}

func (x *SendChat) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendChat.ProtoReflect.Descriptor instead.
func (*SendChat) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{0}
}

func (x *SendChat) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *SendChat) GetTouid() int64 {
	if x != nil {
		return x.Touid
	}
	return 0
}

func (x *SendChat) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *SendChat) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 接收消息
type RecvChat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    int32  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`       // 消息类型
	Fromuid int64  `protobuf:"varint,2,opt,name=fromuid,proto3" json:"fromuid,omitempty"` // 来源id
	From    string `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`        // 来源
	Data    []byte `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`        // 来源数据
}

func (x *RecvChat) Reset() {
	*x = RecvChat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecvChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecvChat) ProtoMessage() {}

func (x *RecvChat) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecvChat.ProtoReflect.Descriptor instead.
func (*RecvChat) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{1}
}

func (x *RecvChat) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *RecvChat) GetFromuid() int64 {
	if x != nil {
		return x.Fromuid
	}
	return 0
}

func (x *RecvChat) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *RecvChat) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_chat_proto protoreflect.FileDescriptor

var file_chat_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0x58, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68,
	0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x75, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x60, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x76, 0x43, 0x68, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x2a, 0xc6, 0x01, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x74, 0x5f, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x45,
	0x58, 0x54, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x02, 0x12,
	0x0d, 0x0a, 0x09, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x55, 0x52, 0x4c, 0x10, 0x03, 0x12, 0x10,
	0x0a, 0x0c, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x42, 0x41, 0x53, 0x45, 0x36, 0x34, 0x10, 0x04,
	0x12, 0x09, 0x0a, 0x05, 0x53, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x53,
	0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x55, 0x52, 0x4c, 0x10, 0x06, 0x12, 0x09, 0x0a, 0x05, 0x56, 0x49,
	0x44, 0x45, 0x4f, 0x10, 0x07, 0x12, 0x0d, 0x0a, 0x09, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x5f, 0x55,
	0x52, 0x4c, 0x10, 0x08, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x54, 0x4d, 0x4c, 0x10, 0x09, 0x12, 0x0c,
	0x0a, 0x08, 0x48, 0x54, 0x4d, 0x4c, 0x5f, 0x55, 0x52, 0x4c, 0x10, 0x0a, 0x12, 0x0a, 0x0a, 0x06,
	0x45, 0x4d, 0x4f, 0x4a, 0x49, 0x49, 0x10, 0x0b, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x4d, 0x4f, 0x4a,
	0x49, 0x49, 0x5f, 0x55, 0x52, 0x4c, 0x10, 0x0c, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x4d, 0x4f, 0x4a,
	0x49, 0x49, 0x5f, 0x42, 0x41, 0x53, 0x45, 0x36, 0x34, 0x10, 0x0d, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_chat_proto_rawDescOnce sync.Once
	file_chat_proto_rawDescData = file_chat_proto_rawDesc
)

func file_chat_proto_rawDescGZIP() []byte {
	file_chat_proto_rawDescOnce.Do(func() {
		file_chat_proto_rawDescData = protoimpl.X.CompressGZIP(file_chat_proto_rawDescData)
	})
	return file_chat_proto_rawDescData
}

var file_chat_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_chat_proto_goTypes = []interface{}{
	(Chat_Type)(0),   // 0: protocol.Chat_Type
	(*SendChat)(nil), // 1: protocol.SendChat
	(*RecvChat)(nil), // 2: protocol.RecvChat
}
var file_chat_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_chat_proto_init() }
func file_chat_proto_init() {
	if File_chat_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chat_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendChat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecvChat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chat_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chat_proto_goTypes,
		DependencyIndexes: file_chat_proto_depIdxs,
		EnumInfos:         file_chat_proto_enumTypes,
		MessageInfos:      file_chat_proto_msgTypes,
	}.Build()
	File_chat_proto = out.File
	file_chat_proto_rawDesc = nil
	file_chat_proto_goTypes = nil
	file_chat_proto_depIdxs = nil
}
