// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: paynode.proto

package paynode

import (
	common "github.com/heegspace/heegproto/common"
	rescode "github.com/heegspace/heegproto/rescode"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SponsorAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth    *common.Authorize   `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Sponsor *common.SponsorItem `protobuf:"bytes,2,opt,name=sponsor,proto3" json:"sponsor,omitempty"`
	Extra   map[string]string   `protobuf:"bytes,3,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SponsorAddReq) Reset() {
	*x = SponsorAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paynode_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SponsorAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SponsorAddReq) ProtoMessage() {}

func (x *SponsorAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_paynode_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SponsorAddReq.ProtoReflect.Descriptor instead.
func (*SponsorAddReq) Descriptor() ([]byte, []int) {
	return file_paynode_proto_rawDescGZIP(), []int{0}
}

func (x *SponsorAddReq) GetAuth() *common.Authorize {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *SponsorAddReq) GetSponsor() *common.SponsorItem {
	if x != nil {
		return x.Sponsor
	}
	return nil
}

func (x *SponsorAddReq) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type SponsorAddRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rescode rescode.Code      `protobuf:"varint,1,opt,name=rescode,proto3,enum=rescode.Code" json:"rescode,omitempty"`
	Resmsg  string            `protobuf:"bytes,2,opt,name=resmsg,proto3" json:"resmsg,omitempty"`
	Extra   map[string]string `protobuf:"bytes,3,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SponsorAddRes) Reset() {
	*x = SponsorAddRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paynode_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SponsorAddRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SponsorAddRes) ProtoMessage() {}

func (x *SponsorAddRes) ProtoReflect() protoreflect.Message {
	mi := &file_paynode_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SponsorAddRes.ProtoReflect.Descriptor instead.
func (*SponsorAddRes) Descriptor() ([]byte, []int) {
	return file_paynode_proto_rawDescGZIP(), []int{1}
}

func (x *SponsorAddRes) GetRescode() rescode.Code {
	if x != nil {
		return x.Rescode
	}
	return rescode.Code_code_SUCCESS
}

func (x *SponsorAddRes) GetResmsg() string {
	if x != nil {
		return x.Resmsg
	}
	return ""
}

func (x *SponsorAddRes) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type SponsorListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth  *common.Authorize `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Page  int32             `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Size  int32             `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Uid   int64             `protobuf:"varint,4,opt,name=uid,proto3" json:"uid,omitempty"`
	Extra map[string]string `protobuf:"bytes,5,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SponsorListReq) Reset() {
	*x = SponsorListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paynode_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SponsorListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SponsorListReq) ProtoMessage() {}

func (x *SponsorListReq) ProtoReflect() protoreflect.Message {
	mi := &file_paynode_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SponsorListReq.ProtoReflect.Descriptor instead.
func (*SponsorListReq) Descriptor() ([]byte, []int) {
	return file_paynode_proto_rawDescGZIP(), []int{2}
}

func (x *SponsorListReq) GetAuth() *common.Authorize {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *SponsorListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SponsorListReq) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SponsorListReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *SponsorListReq) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type SponsorListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rescode rescode.Code          `protobuf:"varint,1,opt,name=rescode,proto3,enum=rescode.Code" json:"rescode,omitempty"`
	Resmsg  string                `protobuf:"bytes,2,opt,name=resmsg,proto3" json:"resmsg,omitempty"`
	Lists   []*common.SponsorItem `protobuf:"bytes,3,rep,name=lists,proto3" json:"lists,omitempty"`
	Extra   map[string]string     `protobuf:"bytes,4,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SponsorListRes) Reset() {
	*x = SponsorListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paynode_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SponsorListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SponsorListRes) ProtoMessage() {}

func (x *SponsorListRes) ProtoReflect() protoreflect.Message {
	mi := &file_paynode_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SponsorListRes.ProtoReflect.Descriptor instead.
func (*SponsorListRes) Descriptor() ([]byte, []int) {
	return file_paynode_proto_rawDescGZIP(), []int{3}
}

func (x *SponsorListRes) GetRescode() rescode.Code {
	if x != nil {
		return x.Rescode
	}
	return rescode.Code_code_SUCCESS
}

func (x *SponsorListRes) GetResmsg() string {
	if x != nil {
		return x.Resmsg
	}
	return ""
}

func (x *SponsorListRes) GetLists() []*common.SponsorItem {
	if x != nil {
		return x.Lists
	}
	return nil
}

func (x *SponsorListRes) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

var File_paynode_proto protoreflect.FileDescriptor

var file_paynode_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x70, 0x61, 0x79, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x70, 0x61, 0x79, 0x6e, 0x6f, 0x64, 0x65, 0x1a, 0x15, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64,
	0x65, 0x2f, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd8, 0x01, 0x0a, 0x0d, 0x53, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72,
	0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x2d, 0x0a,
	0x07, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x07, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x12, 0x37, 0x0a, 0x05,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x61,
	0x79, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x53, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x41, 0x64, 0x64,
	0x52, 0x65, 0x71, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xc3, 0x01, 0x0a, 0x0d, 0x53, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x73, 0x12, 0x27, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x6d,
	0x73, 0x67, 0x12, 0x37, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x70, 0x61, 0x79, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x53, 0x70, 0x6f, 0x6e,
	0x73, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe5, 0x01, 0x0a, 0x0e, 0x53, 0x70, 0x6f, 0x6e, 0x73, 0x6f,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x61, 0x79, 0x6e, 0x6f,
	0x64, 0x65, 0x2e, 0x53, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xf0, 0x01,
	0x0a, 0x0e, 0x53, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x12, 0x27, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0d, 0x2e, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x07, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x6d, 0x73,
	0x67, 0x12, 0x29, 0x0a, 0x05, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x70, 0x6f, 0x6e, 0x73, 0x6f,
	0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x12, 0x38, 0x0a, 0x05,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x61,
	0x79, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x53, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x32, 0x93, 0x01, 0x0a, 0x0e, 0x50, 0x61, 0x79, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x3e, 0x0a, 0x0a, 0x53, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x41, 0x64,
	0x64, 0x12, 0x16, 0x2e, 0x70, 0x61, 0x79, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x53, 0x70, 0x6f, 0x6e,
	0x73, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x61, 0x79, 0x6e,
	0x6f, 0x64, 0x65, 0x2e, 0x53, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x73, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0b, 0x53, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x17, 0x2e, 0x70, 0x61, 0x79, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x53, 0x70, 0x6f,
	0x6e, 0x73, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x61,
	0x79, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x53, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x22, 0x00, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2f, 0x70, 0x61, 0x79, 0x6e,
	0x6f, 0x64, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_paynode_proto_rawDescOnce sync.Once
	file_paynode_proto_rawDescData = file_paynode_proto_rawDesc
)

func file_paynode_proto_rawDescGZIP() []byte {
	file_paynode_proto_rawDescOnce.Do(func() {
		file_paynode_proto_rawDescData = protoimpl.X.CompressGZIP(file_paynode_proto_rawDescData)
	})
	return file_paynode_proto_rawDescData
}

var file_paynode_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_paynode_proto_goTypes = []interface{}{
	(*SponsorAddReq)(nil),      // 0: paynode.SponsorAddReq
	(*SponsorAddRes)(nil),      // 1: paynode.SponsorAddRes
	(*SponsorListReq)(nil),     // 2: paynode.SponsorListReq
	(*SponsorListRes)(nil),     // 3: paynode.SponsorListRes
	nil,                        // 4: paynode.SponsorAddReq.ExtraEntry
	nil,                        // 5: paynode.SponsorAddRes.ExtraEntry
	nil,                        // 6: paynode.SponsorListReq.ExtraEntry
	nil,                        // 7: paynode.SponsorListRes.ExtraEntry
	(*common.Authorize)(nil),   // 8: common.Authorize
	(*common.SponsorItem)(nil), // 9: common.SponsorItem
	(rescode.Code)(0),          // 10: rescode.Code
}
var file_paynode_proto_depIdxs = []int32{
	8,  // 0: paynode.SponsorAddReq.auth:type_name -> common.Authorize
	9,  // 1: paynode.SponsorAddReq.sponsor:type_name -> common.SponsorItem
	4,  // 2: paynode.SponsorAddReq.extra:type_name -> paynode.SponsorAddReq.ExtraEntry
	10, // 3: paynode.SponsorAddRes.rescode:type_name -> rescode.Code
	5,  // 4: paynode.SponsorAddRes.extra:type_name -> paynode.SponsorAddRes.ExtraEntry
	8,  // 5: paynode.SponsorListReq.auth:type_name -> common.Authorize
	6,  // 6: paynode.SponsorListReq.extra:type_name -> paynode.SponsorListReq.ExtraEntry
	10, // 7: paynode.SponsorListRes.rescode:type_name -> rescode.Code
	9,  // 8: paynode.SponsorListRes.lists:type_name -> common.SponsorItem
	7,  // 9: paynode.SponsorListRes.extra:type_name -> paynode.SponsorListRes.ExtraEntry
	0,  // 10: paynode.PaynodeService.SponsorAdd:input_type -> paynode.SponsorAddReq
	2,  // 11: paynode.PaynodeService.SponsorList:input_type -> paynode.SponsorListReq
	1,  // 12: paynode.PaynodeService.SponsorAdd:output_type -> paynode.SponsorAddRes
	3,  // 13: paynode.PaynodeService.SponsorList:output_type -> paynode.SponsorListRes
	12, // [12:14] is the sub-list for method output_type
	10, // [10:12] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_paynode_proto_init() }
func file_paynode_proto_init() {
	if File_paynode_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_paynode_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SponsorAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paynode_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SponsorAddRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paynode_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SponsorListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paynode_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SponsorListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_paynode_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_paynode_proto_goTypes,
		DependencyIndexes: file_paynode_proto_depIdxs,
		MessageInfos:      file_paynode_proto_msgTypes,
	}.Build()
	File_paynode_proto = out.File
	file_paynode_proto_rawDesc = nil
	file_paynode_proto_goTypes = nil
	file_paynode_proto_depIdxs = nil
}
