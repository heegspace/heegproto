// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: teachnode.proto

package teachnode

import (
	common "common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	rescode "rescode"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TeaccherSubject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Score int32  `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *TeaccherSubject) Reset() {
	*x = TeaccherSubject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teachnode_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeaccherSubject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeaccherSubject) ProtoMessage() {}

func (x *TeaccherSubject) ProtoReflect() protoreflect.Message {
	mi := &file_teachnode_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeaccherSubject.ProtoReflect.Descriptor instead.
func (*TeaccherSubject) Descriptor() ([]byte, []int) {
	return file_teachnode_proto_rawDescGZIP(), []int{0}
}

func (x *TeaccherSubject) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TeaccherSubject) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

type TeacherItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid     int64              `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Tag     string             `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	Resume  string             `protobuf:"bytes,3,opt,name=resume,proto3" json:"resume,omitempty"`
	Subject []*TeaccherSubject `protobuf:"bytes,4,rep,name=subject,proto3" json:"subject,omitempty"`
	Status  int32              `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	Tmlong  int64              `protobuf:"varint,6,opt,name=tmlong,proto3" json:"tmlong,omitempty"`
}

func (x *TeacherItem) Reset() {
	*x = TeacherItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teachnode_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeacherItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeacherItem) ProtoMessage() {}

func (x *TeacherItem) ProtoReflect() protoreflect.Message {
	mi := &file_teachnode_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeacherItem.ProtoReflect.Descriptor instead.
func (*TeacherItem) Descriptor() ([]byte, []int) {
	return file_teachnode_proto_rawDescGZIP(), []int{1}
}

func (x *TeacherItem) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *TeacherItem) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *TeacherItem) GetResume() string {
	if x != nil {
		return x.Resume
	}
	return ""
}

func (x *TeacherItem) GetSubject() []*TeaccherSubject {
	if x != nil {
		return x.Subject
	}
	return nil
}

func (x *TeacherItem) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *TeacherItem) GetTmlong() int64 {
	if x != nil {
		return x.Tmlong
	}
	return 0
}

type UpdateTeacherReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth    *common.Authorize `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Teacher *TeacherItem      `protobuf:"bytes,2,opt,name=teacher,proto3" json:"teacher,omitempty"`
	Extra   map[string]string `protobuf:"bytes,3,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UpdateTeacherReq) Reset() {
	*x = UpdateTeacherReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teachnode_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTeacherReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTeacherReq) ProtoMessage() {}

func (x *UpdateTeacherReq) ProtoReflect() protoreflect.Message {
	mi := &file_teachnode_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTeacherReq.ProtoReflect.Descriptor instead.
func (*UpdateTeacherReq) Descriptor() ([]byte, []int) {
	return file_teachnode_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateTeacherReq) GetAuth() *common.Authorize {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *UpdateTeacherReq) GetTeacher() *TeacherItem {
	if x != nil {
		return x.Teacher
	}
	return nil
}

func (x *UpdateTeacherReq) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type UpdateTeacherRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rescode rescode.Code      `protobuf:"varint,1,opt,name=rescode,proto3,enum=rescode.Code" json:"rescode,omitempty"`
	Resmsg  string            `protobuf:"bytes,2,opt,name=resmsg,proto3" json:"resmsg,omitempty"`
	Extra   map[string]string `protobuf:"bytes,3,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UpdateTeacherRes) Reset() {
	*x = UpdateTeacherRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teachnode_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTeacherRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTeacherRes) ProtoMessage() {}

func (x *UpdateTeacherRes) ProtoReflect() protoreflect.Message {
	mi := &file_teachnode_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTeacherRes.ProtoReflect.Descriptor instead.
func (*UpdateTeacherRes) Descriptor() ([]byte, []int) {
	return file_teachnode_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateTeacherRes) GetRescode() rescode.Code {
	if x != nil {
		return x.Rescode
	}
	return rescode.Code_code_SUCCESS
}

func (x *UpdateTeacherRes) GetResmsg() string {
	if x != nil {
		return x.Resmsg
	}
	return ""
}

func (x *UpdateTeacherRes) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type FindTeacherItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Teacher *TeacherItem     `protobuf:"bytes,1,opt,name=teacher,proto3" json:"teacher,omitempty"`
	Info    *common.UserInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *FindTeacherItem) Reset() {
	*x = FindTeacherItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teachnode_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindTeacherItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindTeacherItem) ProtoMessage() {}

func (x *FindTeacherItem) ProtoReflect() protoreflect.Message {
	mi := &file_teachnode_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindTeacherItem.ProtoReflect.Descriptor instead.
func (*FindTeacherItem) Descriptor() ([]byte, []int) {
	return file_teachnode_proto_rawDescGZIP(), []int{4}
}

func (x *FindTeacherItem) GetTeacher() *TeacherItem {
	if x != nil {
		return x.Teacher
	}
	return nil
}

func (x *FindTeacherItem) GetInfo() *common.UserInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type FindTeacherReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth    *common.Authorize `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Tuid    int64             `protobuf:"varint,2,opt,name=tuid,proto3" json:"tuid,omitempty"`
	Uuid    int64             `protobuf:"varint,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Subject string            `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"`
	Page    int32             `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	Size    int32             `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	Sorted  string            `protobuf:"bytes,7,opt,name=sorted,proto3" json:"sorted,omitempty"`
	Extra   map[string]string `protobuf:"bytes,8,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *FindTeacherReq) Reset() {
	*x = FindTeacherReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teachnode_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindTeacherReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindTeacherReq) ProtoMessage() {}

func (x *FindTeacherReq) ProtoReflect() protoreflect.Message {
	mi := &file_teachnode_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindTeacherReq.ProtoReflect.Descriptor instead.
func (*FindTeacherReq) Descriptor() ([]byte, []int) {
	return file_teachnode_proto_rawDescGZIP(), []int{5}
}

func (x *FindTeacherReq) GetAuth() *common.Authorize {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *FindTeacherReq) GetTuid() int64 {
	if x != nil {
		return x.Tuid
	}
	return 0
}

func (x *FindTeacherReq) GetUuid() int64 {
	if x != nil {
		return x.Uuid
	}
	return 0
}

func (x *FindTeacherReq) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *FindTeacherReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FindTeacherReq) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FindTeacherReq) GetSorted() string {
	if x != nil {
		return x.Sorted
	}
	return ""
}

func (x *FindTeacherReq) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type FindTeacherRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rescode  rescode.Code       `protobuf:"varint,1,opt,name=rescode,proto3,enum=rescode.Code" json:"rescode,omitempty"`
	Resmsg   string             `protobuf:"bytes,2,opt,name=resmsg,proto3" json:"resmsg,omitempty"`
	Teachers []*FindTeacherItem `protobuf:"bytes,3,rep,name=teachers,proto3" json:"teachers,omitempty"`
	Extra    map[string]string  `protobuf:"bytes,4,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *FindTeacherRes) Reset() {
	*x = FindTeacherRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teachnode_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindTeacherRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindTeacherRes) ProtoMessage() {}

func (x *FindTeacherRes) ProtoReflect() protoreflect.Message {
	mi := &file_teachnode_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindTeacherRes.ProtoReflect.Descriptor instead.
func (*FindTeacherRes) Descriptor() ([]byte, []int) {
	return file_teachnode_proto_rawDescGZIP(), []int{6}
}

func (x *FindTeacherRes) GetRescode() rescode.Code {
	if x != nil {
		return x.Rescode
	}
	return rescode.Code_code_SUCCESS
}

func (x *FindTeacherRes) GetResmsg() string {
	if x != nil {
		return x.Resmsg
	}
	return ""
}

func (x *FindTeacherRes) GetTeachers() []*FindTeacherItem {
	if x != nil {
		return x.Teachers
	}
	return nil
}

func (x *FindTeacherRes) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type FocusTeacherReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth   *common.Authorize `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Tuid   int64             `protobuf:"varint,2,opt,name=tuid,proto3" json:"tuid,omitempty"`
	Uuid   int64             `protobuf:"varint,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Status int32             `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	Extra  map[string]string `protobuf:"bytes,5,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *FocusTeacherReq) Reset() {
	*x = FocusTeacherReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teachnode_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FocusTeacherReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FocusTeacherReq) ProtoMessage() {}

func (x *FocusTeacherReq) ProtoReflect() protoreflect.Message {
	mi := &file_teachnode_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FocusTeacherReq.ProtoReflect.Descriptor instead.
func (*FocusTeacherReq) Descriptor() ([]byte, []int) {
	return file_teachnode_proto_rawDescGZIP(), []int{7}
}

func (x *FocusTeacherReq) GetAuth() *common.Authorize {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *FocusTeacherReq) GetTuid() int64 {
	if x != nil {
		return x.Tuid
	}
	return 0
}

func (x *FocusTeacherReq) GetUuid() int64 {
	if x != nil {
		return x.Uuid
	}
	return 0
}

func (x *FocusTeacherReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *FocusTeacherReq) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type FocusTeacherRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rescode rescode.Code      `protobuf:"varint,1,opt,name=rescode,proto3,enum=rescode.Code" json:"rescode,omitempty"`
	Resmsg  string            `protobuf:"bytes,2,opt,name=resmsg,proto3" json:"resmsg,omitempty"`
	Extra   map[string]string `protobuf:"bytes,3,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *FocusTeacherRes) Reset() {
	*x = FocusTeacherRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teachnode_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FocusTeacherRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FocusTeacherRes) ProtoMessage() {}

func (x *FocusTeacherRes) ProtoReflect() protoreflect.Message {
	mi := &file_teachnode_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FocusTeacherRes.ProtoReflect.Descriptor instead.
func (*FocusTeacherRes) Descriptor() ([]byte, []int) {
	return file_teachnode_proto_rawDescGZIP(), []int{8}
}

func (x *FocusTeacherRes) GetRescode() rescode.Code {
	if x != nil {
		return x.Rescode
	}
	return rescode.Code_code_SUCCESS
}

func (x *FocusTeacherRes) GetResmsg() string {
	if x != nil {
		return x.Resmsg
	}
	return ""
}

func (x *FocusTeacherRes) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

var File_teachnode_proto protoreflect.FileDescriptor

var file_teachnode_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x74, 0x65, 0x61, 0x63, 0x68, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x74, 0x65, 0x61, 0x63, 0x68, 0x6e, 0x6f, 0x64, 0x65, 0x1a, 0x15, 0x72, 0x65,
	0x73, 0x63, 0x6f, 0x64, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3c, 0x0a, 0x10, 0x74, 0x65, 0x61, 0x63,
	0x63, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x0c, 0x74, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x72, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x6e, 0x6f, 0x64, 0x65,
	0x2e, 0x74, 0x65, 0x61, 0x63, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6d, 0x6c, 0x6f, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x74, 0x6d, 0x6c, 0x6f, 0x6e, 0x67, 0x22, 0xe8, 0x01, 0x0a, 0x12, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x72, 0x65,
	0x71, 0x12, 0x25, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x31, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x63,
	0x68, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x65, 0x61, 0x63,
	0x68, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x52, 0x07, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x05, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x74, 0x65, 0x61,
	0x63, 0x68, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x65,
	0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xcf, 0x01, 0x0a, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x07,
	0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e,
	0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x72, 0x65,
	0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x6d, 0x73, 0x67, 0x12, 0x3e, 0x0a,
	0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x74,
	0x65, 0x61, 0x63, 0x68, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a,
	0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x6d, 0x0a, 0x11, 0x66, 0x69, 0x6e, 0x64, 0x5f,
	0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x31, 0x0a, 0x07,
	0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x74, 0x65, 0x61, 0x63, 0x68, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12,
	0x25, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xb3, 0x02, 0x0a, 0x10, 0x66, 0x69, 0x6e, 0x64, 0x5f,
	0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x04, 0x61,
	0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x74, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x6e, 0x6f, 0x64, 0x65, 0x2e,
	0x66, 0x69, 0x6e, 0x64, 0x5f, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71,
	0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x85, 0x02, 0x0a,
	0x10, 0x66, 0x69, 0x6e, 0x64, 0x5f, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x72, 0x65,
	0x73, 0x12, 0x27, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x64,
	0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x6d,
	0x73, 0x67, 0x12, 0x38, 0x0a, 0x08, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x6e, 0x6f, 0x64, 0x65,
	0x2e, 0x66, 0x69, 0x6e, 0x64, 0x5f, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x52, 0x08, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x12, 0x3c, 0x0a, 0x05,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x74, 0x65,
	0x61, 0x63, 0x68, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x66, 0x69, 0x6e, 0x64, 0x5f, 0x74, 0x65, 0x61,
	0x63, 0x68, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xf3, 0x01, 0x0a, 0x11, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x5f, 0x74,
	0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x74, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x3d, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x66, 0x6f, 0x63,
	0x75, 0x73, 0x5f, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x2e, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xcd, 0x01, 0x0a, 0x11, 0x66,
	0x6f, 0x63, 0x75, 0x73, 0x5f, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73,
	0x12, 0x27, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0d, 0x2e, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x64, 0x65,
	0x52, 0x07, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x6d, 0x73,
	0x67, 0x12, 0x3d, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x66, 0x6f, 0x63,
	0x75, 0x73, 0x5f, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x2e, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0xff, 0x01, 0x0a, 0x11, 0x74,
	0x65, 0x61, 0x63, 0x68, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x50, 0x0a, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x72, 0x12, 0x1d, 0x2e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x72, 0x65,
	0x71, 0x1a, 0x1d, 0x2e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73,
	0x22, 0x00, 0x12, 0x49, 0x0a, 0x0b, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65,
	0x72, 0x12, 0x1b, 0x2e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x66, 0x69,
	0x6e, 0x64, 0x5f, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x1a, 0x1b,
	0x2e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x66, 0x69, 0x6e, 0x64, 0x5f,
	0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x22, 0x00, 0x12, 0x4d, 0x0a,
	0x0d, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x5f, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12, 0x1c,
	0x2e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x66, 0x6f, 0x63, 0x75, 0x73,
	0x5f, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x74,
	0x65, 0x61, 0x63, 0x68, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x5f, 0x74,
	0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_teachnode_proto_rawDescOnce sync.Once
	file_teachnode_proto_rawDescData = file_teachnode_proto_rawDesc
)

func file_teachnode_proto_rawDescGZIP() []byte {
	file_teachnode_proto_rawDescOnce.Do(func() {
		file_teachnode_proto_rawDescData = protoimpl.X.CompressGZIP(file_teachnode_proto_rawDescData)
	})
	return file_teachnode_proto_rawDescData
}

var file_teachnode_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_teachnode_proto_goTypes = []interface{}{
	(*TeaccherSubject)(nil),  // 0: teachnode.teaccher_subject
	(*TeacherItem)(nil),      // 1: teachnode.teacher_item
	(*UpdateTeacherReq)(nil), // 2: teachnode.update_teacher_req
	(*UpdateTeacherRes)(nil), // 3: teachnode.update_teacher_res
	(*FindTeacherItem)(nil),  // 4: teachnode.find_teacher_item
	(*FindTeacherReq)(nil),   // 5: teachnode.find_teacher_req
	(*FindTeacherRes)(nil),   // 6: teachnode.find_teacher_res
	(*FocusTeacherReq)(nil),  // 7: teachnode.focus_teacher_req
	(*FocusTeacherRes)(nil),  // 8: teachnode.focus_teacher_res
	nil,                      // 9: teachnode.update_teacher_req.ExtraEntry
	nil,                      // 10: teachnode.update_teacher_res.ExtraEntry
	nil,                      // 11: teachnode.find_teacher_req.ExtraEntry
	nil,                      // 12: teachnode.find_teacher_res.ExtraEntry
	nil,                      // 13: teachnode.focus_teacher_req.ExtraEntry
	nil,                      // 14: teachnode.focus_teacher_res.ExtraEntry
	(*common.Authorize)(nil), // 15: common.authorize
	(rescode.Code)(0),        // 16: rescode.code
	(*common.UserInfo)(nil),  // 17: common.user_info
}
var file_teachnode_proto_depIdxs = []int32{
	0,  // 0: teachnode.teacher_item.subject:type_name -> teachnode.teaccher_subject
	15, // 1: teachnode.update_teacher_req.auth:type_name -> common.authorize
	1,  // 2: teachnode.update_teacher_req.teacher:type_name -> teachnode.teacher_item
	9,  // 3: teachnode.update_teacher_req.extra:type_name -> teachnode.update_teacher_req.ExtraEntry
	16, // 4: teachnode.update_teacher_res.rescode:type_name -> rescode.code
	10, // 5: teachnode.update_teacher_res.extra:type_name -> teachnode.update_teacher_res.ExtraEntry
	1,  // 6: teachnode.find_teacher_item.teacher:type_name -> teachnode.teacher_item
	17, // 7: teachnode.find_teacher_item.info:type_name -> common.user_info
	15, // 8: teachnode.find_teacher_req.auth:type_name -> common.authorize
	11, // 9: teachnode.find_teacher_req.extra:type_name -> teachnode.find_teacher_req.ExtraEntry
	16, // 10: teachnode.find_teacher_res.rescode:type_name -> rescode.code
	4,  // 11: teachnode.find_teacher_res.teachers:type_name -> teachnode.find_teacher_item
	12, // 12: teachnode.find_teacher_res.extra:type_name -> teachnode.find_teacher_res.ExtraEntry
	15, // 13: teachnode.focus_teacher_req.auth:type_name -> common.authorize
	13, // 14: teachnode.focus_teacher_req.extra:type_name -> teachnode.focus_teacher_req.ExtraEntry
	16, // 15: teachnode.focus_teacher_res.rescode:type_name -> rescode.code
	14, // 16: teachnode.focus_teacher_res.extra:type_name -> teachnode.focus_teacher_res.ExtraEntry
	2,  // 17: teachnode.teachnode_service.update_teacher:input_type -> teachnode.update_teacher_req
	5,  // 18: teachnode.teachnode_service.get_teacher:input_type -> teachnode.find_teacher_req
	7,  // 19: teachnode.teachnode_service.focus_teacher:input_type -> teachnode.focus_teacher_req
	3,  // 20: teachnode.teachnode_service.update_teacher:output_type -> teachnode.update_teacher_res
	6,  // 21: teachnode.teachnode_service.get_teacher:output_type -> teachnode.find_teacher_res
	8,  // 22: teachnode.teachnode_service.focus_teacher:output_type -> teachnode.focus_teacher_res
	20, // [20:23] is the sub-list for method output_type
	17, // [17:20] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_teachnode_proto_init() }
func file_teachnode_proto_init() {
	if File_teachnode_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_teachnode_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeaccherSubject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teachnode_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeacherItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teachnode_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTeacherReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teachnode_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTeacherRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teachnode_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindTeacherItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teachnode_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindTeacherReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teachnode_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindTeacherRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teachnode_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FocusTeacherReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teachnode_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FocusTeacherRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_teachnode_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_teachnode_proto_goTypes,
		DependencyIndexes: file_teachnode_proto_depIdxs,
		MessageInfos:      file_teachnode_proto_msgTypes,
	}.Build()
	File_teachnode_proto = out.File
	file_teachnode_proto_rawDesc = nil
	file_teachnode_proto_goTypes = nil
	file_teachnode_proto_depIdxs = nil
}
