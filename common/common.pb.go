// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: common.proto

package common

import (
	_ "github.com/heegspace/heegproto/rescode"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Role int32

const (
	Role_NORMAL     Role = 0   // 普通用户
	Role_COOPERATOR Role = 1   // 企业用户
	Role_TEACHER    Role = 2   // 教师用户
	Role_STAFFOR    Role = 256 // 员工同事
	Role_SUPEROR    Role = 512 // 超级用户
)

// Enum value maps for Role.
var (
	Role_name = map[int32]string{
		0:   "NORMAL",
		1:   "COOPERATOR",
		2:   "TEACHER",
		256: "STAFFOR",
		512: "SUPEROR",
	}
	Role_value = map[string]int32{
		"NORMAL":     0,
		"COOPERATOR": 1,
		"TEACHER":    2,
		"STAFFOR":    256,
		"SUPEROR":    512,
	}
)

func (x Role) Enum() *Role {
	p := new(Role)
	*p = x
	return p
}

func (x Role) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Role) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[0].Descriptor()
}

func (Role) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[0]
}

func (x Role) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Role.Descriptor instead.
func (Role) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{0}
}

type VipLevel int32

const (
	VipLevel_vip_level_VIP_NOT     VipLevel = 0
	VipLevel_vip_level_VIP_1LEVEL  VipLevel = 1  // 1 month
	VipLevel_vip_level_VIP_2LEVEL  VipLevel = 2  // 6 month
	VipLevel_vip_level_VIP_3LEVEL  VipLevel = 3  // 1 year
	VipLevel_vip_level_VIP_16LEVEL VipLevel = 15 // forever
)

// Enum value maps for VipLevel.
var (
	VipLevel_name = map[int32]string{
		0:  "vip_level_VIP_NOT",
		1:  "vip_level_VIP_1LEVEL",
		2:  "vip_level_VIP_2LEVEL",
		3:  "vip_level_VIP_3LEVEL",
		15: "vip_level_VIP_16LEVEL",
	}
	VipLevel_value = map[string]int32{
		"vip_level_VIP_NOT":     0,
		"vip_level_VIP_1LEVEL":  1,
		"vip_level_VIP_2LEVEL":  2,
		"vip_level_VIP_3LEVEL":  3,
		"vip_level_VIP_16LEVEL": 15,
	}
)

func (x VipLevel) Enum() *VipLevel {
	p := new(VipLevel)
	*p = x
	return p
}

func (x VipLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VipLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[1].Descriptor()
}

func (VipLevel) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[1]
}

func (x VipLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VipLevel.Descriptor instead.
func (VipLevel) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{1}
}

type UserStatus int32

const (
	UserStatus_user_status_FROM_PLATOM  UserStatus = 0    // 平台帐号
	UserStatus_user_status_FROM_WECHAT  UserStatus = 1    // wechat帐号
	UserStatus_user_status_FROM_ALIPAY  UserStatus = 2    // alipay帐号
	UserStatus_user_status_FROM_INVALID UserStatus = 2049 // 无效用户
)

// Enum value maps for UserStatus.
var (
	UserStatus_name = map[int32]string{
		0:    "user_status_FROM_PLATOM",
		1:    "user_status_FROM_WECHAT",
		2:    "user_status_FROM_ALIPAY",
		2049: "user_status_FROM_INVALID",
	}
	UserStatus_value = map[string]int32{
		"user_status_FROM_PLATOM":  0,
		"user_status_FROM_WECHAT":  1,
		"user_status_FROM_ALIPAY":  2,
		"user_status_FROM_INVALID": 2049,
	}
)

func (x UserStatus) Enum() *UserStatus {
	p := new(UserStatus)
	*p = x
	return p
}

func (x UserStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[2].Descriptor()
}

func (UserStatus) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[2]
}

func (x UserStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserStatus.Descriptor instead.
func (UserStatus) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{2}
}

type FromPlatom int32

const (
	FromPlatom_from_platom_FROM_LOCAL  FromPlatom = 0 // 自己平台
	FromPlatom_from_platom_FROM_WECHAT FromPlatom = 1 // 微信平台
	FromPlatom_from_platom_FROM_ALIPAY FromPlatom = 2 // 支付宝平台
)

// Enum value maps for FromPlatom.
var (
	FromPlatom_name = map[int32]string{
		0: "from_platom_FROM_LOCAL",
		1: "from_platom_FROM_WECHAT",
		2: "from_platom_FROM_ALIPAY",
	}
	FromPlatom_value = map[string]int32{
		"from_platom_FROM_LOCAL":  0,
		"from_platom_FROM_WECHAT": 1,
		"from_platom_FROM_ALIPAY": 2,
	}
)

func (x FromPlatom) Enum() *FromPlatom {
	p := new(FromPlatom)
	*p = x
	return p
}

func (x FromPlatom) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FromPlatom) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[3].Descriptor()
}

func (FromPlatom) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[3]
}

func (x FromPlatom) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FromPlatom.Descriptor instead.
func (FromPlatom) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{3}
}

type SearchTyle int32

const (
	SearchTyle_FROM_QUESTION SearchTyle = 0 // 来自试题
	SearchTyle_FROM_GRPAH    SearchTyle = 1 // 来自图谱
	SearchTyle_FROM_CLOUD    SearchTyle = 2 // 来自云盘
	SearchTyle_FROM_PRIVATE  SearchTyle = 3 // 来自自己
)

// Enum value maps for SearchTyle.
var (
	SearchTyle_name = map[int32]string{
		0: "FROM_QUESTION",
		1: "FROM_GRPAH",
		2: "FROM_CLOUD",
		3: "FROM_PRIVATE",
	}
	SearchTyle_value = map[string]int32{
		"FROM_QUESTION": 0,
		"FROM_GRPAH":    1,
		"FROM_CLOUD":    2,
		"FROM_PRIVATE":  3,
	}
)

func (x SearchTyle) Enum() *SearchTyle {
	p := new(SearchTyle)
	*p = x
	return p
}

func (x SearchTyle) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchTyle) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[4].Descriptor()
}

func (SearchTyle) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[4]
}

func (x SearchTyle) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchTyle.Descriptor instead.
func (SearchTyle) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{4}
}

type ApproveDest int32

const (
	ApproveDest_search_tyle_APPROVE_TIMU_MODIFY ApproveDest = 0 // 审核修改试题
	ApproveDest_search_tyle_APPROVE_TIMU_ADD    ApproveDest = 1 // 审核试题添加
)

// Enum value maps for ApproveDest.
var (
	ApproveDest_name = map[int32]string{
		0: "search_tyle_APPROVE_TIMU_MODIFY",
		1: "search_tyle_APPROVE_TIMU_ADD",
	}
	ApproveDest_value = map[string]int32{
		"search_tyle_APPROVE_TIMU_MODIFY": 0,
		"search_tyle_APPROVE_TIMU_ADD":    1,
	}
)

func (x ApproveDest) Enum() *ApproveDest {
	p := new(ApproveDest)
	*p = x
	return p
}

func (x ApproveDest) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApproveDest) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[5].Descriptor()
}

func (ApproveDest) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[5]
}

func (x ApproveDest) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApproveDest.Descriptor instead.
func (ApproveDest) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{5}
}

// 教师用户的状态
type TeacherStatus int32

const (
	TeacherStatus_teacher_status_CREATE    TeacherStatus = 0  // 创建
	TeacherStatus_teacher_status_APPROVING TeacherStatus = 1  // 审核中
	TeacherStatus_teacher_status_APPOVED   TeacherStatus = 2  // 已经审核
	TeacherStatus_teacher_status_PASSED    TeacherStatus = 4  // 审核通过
	TeacherStatus_teacher_status_NOPASS    TeacherStatus = 8  // 审核未通过
	TeacherStatus_teacher_status_LOGOUT    TeacherStatus = 16 // 已注销
)

// Enum value maps for TeacherStatus.
var (
	TeacherStatus_name = map[int32]string{
		0:  "teacher_status_CREATE",
		1:  "teacher_status_APPROVING",
		2:  "teacher_status_APPOVED",
		4:  "teacher_status_PASSED",
		8:  "teacher_status_NOPASS",
		16: "teacher_status_LOGOUT",
	}
	TeacherStatus_value = map[string]int32{
		"teacher_status_CREATE":    0,
		"teacher_status_APPROVING": 1,
		"teacher_status_APPOVED":   2,
		"teacher_status_PASSED":    4,
		"teacher_status_NOPASS":    8,
		"teacher_status_LOGOUT":    16,
	}
)

func (x TeacherStatus) Enum() *TeacherStatus {
	p := new(TeacherStatus)
	*p = x
	return p
}

func (x TeacherStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TeacherStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[6].Descriptor()
}

func (TeacherStatus) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[6]
}

func (x TeacherStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TeacherStatus.Descriptor instead.
func (TeacherStatus) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{6}
}

type Teacher2UserStatus int32

const (
	Teacher2UserStatus_teacher2user_status_FOCUS  Teacher2UserStatus = 0 // 关注
	Teacher2UserStatus_teacher2user_status_CANCEL Teacher2UserStatus = 1 // 取消关注
)

// Enum value maps for Teacher2UserStatus.
var (
	Teacher2UserStatus_name = map[int32]string{
		0: "teacher2user_status_FOCUS",
		1: "teacher2user_status_CANCEL",
	}
	Teacher2UserStatus_value = map[string]int32{
		"teacher2user_status_FOCUS":  0,
		"teacher2user_status_CANCEL": 1,
	}
)

func (x Teacher2UserStatus) Enum() *Teacher2UserStatus {
	p := new(Teacher2UserStatus)
	*p = x
	return p
}

func (x Teacher2UserStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Teacher2UserStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[7].Descriptor()
}

func (Teacher2UserStatus) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[7]
}

func (x Teacher2UserStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Teacher2UserStatus.Descriptor instead.
func (Teacher2UserStatus) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{7}
}

type NoteStatus int32

const (
	NoteStatus_note_status_CREATE NoteStatus = 0 // Create
	NoteStatus_note_status_DELETE NoteStatus = 1 // Delete
)

// Enum value maps for NoteStatus.
var (
	NoteStatus_name = map[int32]string{
		0: "note_status_CREATE",
		1: "note_status_DELETE",
	}
	NoteStatus_value = map[string]int32{
		"note_status_CREATE": 0,
		"note_status_DELETE": 1,
	}
)

func (x NoteStatus) Enum() *NoteStatus {
	p := new(NoteStatus)
	*p = x
	return p
}

func (x NoteStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NoteStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[8].Descriptor()
}

func (NoteStatus) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[8]
}

func (x NoteStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NoteStatus.Descriptor instead.
func (NoteStatus) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{8}
}

type CertTyoe int32

const (
	CertTyoe_cert_tyoe_ID   CertTyoe = 0 // 身份证实名
	CertTyoe_cert_tyoe_FACE CertTyoe = 1 // 刷脸实名
)

// Enum value maps for CertTyoe.
var (
	CertTyoe_name = map[int32]string{
		0: "cert_tyoe_ID",
		1: "cert_tyoe_FACE",
	}
	CertTyoe_value = map[string]int32{
		"cert_tyoe_ID":   0,
		"cert_tyoe_FACE": 1,
	}
)

func (x CertTyoe) Enum() *CertTyoe {
	p := new(CertTyoe)
	*p = x
	return p
}

func (x CertTyoe) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CertTyoe) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[9].Descriptor()
}

func (CertTyoe) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[9]
}

func (x CertTyoe) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CertTyoe.Descriptor instead.
func (CertTyoe) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{9}
}

type UpdateUserinfoField int32

const (
	UpdateUserinfoField_update_userinfo_field_USER_NONE     UpdateUserinfoField = 0 //
	UpdateUserinfoField_update_userinfo_field_USER_EMAIL    UpdateUserinfoField = 1 //  更新用户邮箱
	UpdateUserinfoField_update_userinfo_field_USER_PASS     UpdateUserinfoField = 2 //  更新用户密码
	UpdateUserinfoField_update_userinfo_field_USER_AVATAR   UpdateUserinfoField = 3 //  用户头像
	UpdateUserinfoField_update_userinfo_field_USER_NICKNAME UpdateUserinfoField = 4 //  用户名
	UpdateUserinfoField_update_userinfo_field_USER_SEX      UpdateUserinfoField = 5 //  用户性别
)

// Enum value maps for UpdateUserinfoField.
var (
	UpdateUserinfoField_name = map[int32]string{
		0: "update_userinfo_field_USER_NONE",
		1: "update_userinfo_field_USER_EMAIL",
		2: "update_userinfo_field_USER_PASS",
		3: "update_userinfo_field_USER_AVATAR",
		4: "update_userinfo_field_USER_NICKNAME",
		5: "update_userinfo_field_USER_SEX",
	}
	UpdateUserinfoField_value = map[string]int32{
		"update_userinfo_field_USER_NONE":     0,
		"update_userinfo_field_USER_EMAIL":    1,
		"update_userinfo_field_USER_PASS":     2,
		"update_userinfo_field_USER_AVATAR":   3,
		"update_userinfo_field_USER_NICKNAME": 4,
		"update_userinfo_field_USER_SEX":      5,
	}
)

func (x UpdateUserinfoField) Enum() *UpdateUserinfoField {
	p := new(UpdateUserinfoField)
	*p = x
	return p
}

func (x UpdateUserinfoField) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateUserinfoField) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[10].Descriptor()
}

func (UpdateUserinfoField) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[10]
}

func (x UpdateUserinfoField) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateUserinfoField.Descriptor instead.
func (UpdateUserinfoField) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{10}
}

// 日志类型,日志类型并不重复，所有采用对应的整型
type LogType int32

const (
	LogType_log_type_NONE_USER    LogType = 0  //
	LogType_log_type_CREATE_USER  LogType = 1  // 用户创建
	LogType_log_type_UPDATE_USER  LogType = 2  // 用户更新
	LogType_log_type_LOGIN_USER   LogType = 3  // 用户登录
	LogType_log_type_LOGOUT_USER  LogType = 4  // 用户退出
	LogType_log_type_SUBMIT_CERT  LogType = 5  // 提交实名
	LogType_log_type_CANCEL_CERT  LogType = 6  // 取消实名
	LogType_log_type_CERT_FAIL    LogType = 7  // 实名失败
	LogType_log_type_CERT_SUCCESS LogType = 8  // 实名成功
	LogType_log_type_VIP_LEVELUP  LogType = 9  // 升级vip
	LogType_log_type_COIN_APPEND  LogType = 10 // 增加coin
	LogType_log_type_COIN_USED    LogType = 11 // 减少coin
)

// Enum value maps for LogType.
var (
	LogType_name = map[int32]string{
		0:  "log_type_NONE_USER",
		1:  "log_type_CREATE_USER",
		2:  "log_type_UPDATE_USER",
		3:  "log_type_LOGIN_USER",
		4:  "log_type_LOGOUT_USER",
		5:  "log_type_SUBMIT_CERT",
		6:  "log_type_CANCEL_CERT",
		7:  "log_type_CERT_FAIL",
		8:  "log_type_CERT_SUCCESS",
		9:  "log_type_VIP_LEVELUP",
		10: "log_type_COIN_APPEND",
		11: "log_type_COIN_USED",
	}
	LogType_value = map[string]int32{
		"log_type_NONE_USER":    0,
		"log_type_CREATE_USER":  1,
		"log_type_UPDATE_USER":  2,
		"log_type_LOGIN_USER":   3,
		"log_type_LOGOUT_USER":  4,
		"log_type_SUBMIT_CERT":  5,
		"log_type_CANCEL_CERT":  6,
		"log_type_CERT_FAIL":    7,
		"log_type_CERT_SUCCESS": 8,
		"log_type_VIP_LEVELUP":  9,
		"log_type_COIN_APPEND":  10,
		"log_type_COIN_USED":    11,
	}
)

func (x LogType) Enum() *LogType {
	p := new(LogType)
	*p = x
	return p
}

func (x LogType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[11].Descriptor()
}

func (LogType) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[11]
}

func (x LogType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogType.Descriptor instead.
func (LogType) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{11}
}

type Authorize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string            `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string            `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Extra map[string]string `protobuf:"bytes,3,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Authorize) Reset() {
	*x = Authorize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Authorize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Authorize) ProtoMessage() {}

func (x *Authorize) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Authorize.ProtoReflect.Descriptor instead.
func (*Authorize) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{0}
}

func (x *Authorize) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Authorize) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Authorize) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Extra map[string]string `protobuf:"bytes,1,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{1}
}

func (x *Request) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Extra map[string]string `protobuf:"bytes,1,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{2}
}

func (x *Response) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type UpdateUserinfoItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      int64               `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Field    UpdateUserinfoField `protobuf:"varint,2,opt,name=field,proto3,enum=common.UpdateUserinfoField" json:"field,omitempty"`
	NewValue string              `protobuf:"bytes,3,opt,name=new_value,json=newValue,proto3" json:"new_value,omitempty"`
	OldValue string              `protobuf:"bytes,4,opt,name=old_value,json=oldValue,proto3" json:"old_value,omitempty"`
	Extra    map[string]string   `protobuf:"bytes,5,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UpdateUserinfoItem) Reset() {
	*x = UpdateUserinfoItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserinfoItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserinfoItem) ProtoMessage() {}

func (x *UpdateUserinfoItem) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserinfoItem.ProtoReflect.Descriptor instead.
func (*UpdateUserinfoItem) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateUserinfoItem) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UpdateUserinfoItem) GetField() UpdateUserinfoField {
	if x != nil {
		return x.Field
	}
	return UpdateUserinfoField_update_userinfo_field_USER_NONE
}

func (x *UpdateUserinfoItem) GetNewValue() string {
	if x != nil {
		return x.NewValue
	}
	return ""
}

func (x *UpdateUserinfoItem) GetOldValue() string {
	if x != nil {
		return x.OldValue
	}
	return ""
}

func (x *UpdateUserinfoItem) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type QuestionQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: form:"roll_id"
	RollId string `protobuf:"bytes,1,opt,name=roll_id,json=rollId,proto3" json:"roll_id,omitempty"`
	// @inject_tag: form:"roll_name"
	RollName string `protobuf:"bytes,2,opt,name=roll_name,json=rollName,proto3" json:"roll_name,omitempty"`
	// @inject_tag: form:"grade_id"
	GradeId string `protobuf:"bytes,3,opt,name=grade_id,json=gradeId,proto3" json:"grade_id,omitempty"`
	// @inject_tag: form:"grade_name"
	GradeName string `protobuf:"bytes,4,opt,name=grade_name,json=gradeName,proto3" json:"grade_name,omitempty"`
	// @inject_tag: form:"subject_id"
	SubjectId string `protobuf:"bytes,5,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
	// @inject_tag: form:"subject_name"
	SubjectName string `protobuf:"bytes,6,opt,name=subject_name,json=subjectName,proto3" json:"subject_name,omitempty"`
	// @inject_tag: form:"version_id"
	VersionId string `protobuf:"bytes,7,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	// @inject_tag: form:"version_name"
	VersionName string `protobuf:"bytes,8,opt,name=version_name,json=versionName,proto3" json:"version_name,omitempty"`
	// @inject_tag: form:"chapter_id"
	ChapterId string `protobuf:"bytes,9,opt,name=chapter_id,json=chapterId,proto3" json:"chapter_id,omitempty"`
	// @inject_tag: form:"chapter_name"
	ChapterName string `protobuf:"bytes,10,opt,name=chapter_name,json=chapterName,proto3" json:"chapter_name,omitempty"`
	// @inject_tag: form:"ti_xing_id"
	TiXingId string `protobuf:"bytes,11,opt,name=ti_xing_id,json=tiXingId,proto3" json:"ti_xing_id,omitempty"`
	// @inject_tag: form:"ti_xing_name"
	TiXingName string `protobuf:"bytes,12,opt,name=ti_xing_name,json=tiXingName,proto3" json:"ti_xing_name,omitempty"`
	// @inject_tag: form:"source_id"
	SourceId string `protobuf:"bytes,13,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	// @inject_tag: form:"source_name"
	SourceName string `protobuf:"bytes,14,opt,name=source_name,json=sourceName,proto3" json:"source_name,omitempty"`
	// @inject_tag: form:"page"
	Page int32 `protobuf:"varint,15,opt,name=page,proto3" json:"page,omitempty"`
	// @inject_tag: form:"size"
	Size int32 `protobuf:"varint,16,opt,name=size,proto3" json:"size,omitempty"`
	// @inject_tag: form:"user_id"
	UserId string `protobuf:"bytes,17,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// @inject_tag: form:"extra"
	Extra map[string]string `protobuf:"bytes,18,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *QuestionQuery) Reset() {
	*x = QuestionQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionQuery) ProtoMessage() {}

func (x *QuestionQuery) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionQuery.ProtoReflect.Descriptor instead.
func (*QuestionQuery) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{4}
}

func (x *QuestionQuery) GetRollId() string {
	if x != nil {
		return x.RollId
	}
	return ""
}

func (x *QuestionQuery) GetRollName() string {
	if x != nil {
		return x.RollName
	}
	return ""
}

func (x *QuestionQuery) GetGradeId() string {
	if x != nil {
		return x.GradeId
	}
	return ""
}

func (x *QuestionQuery) GetGradeName() string {
	if x != nil {
		return x.GradeName
	}
	return ""
}

func (x *QuestionQuery) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *QuestionQuery) GetSubjectName() string {
	if x != nil {
		return x.SubjectName
	}
	return ""
}

func (x *QuestionQuery) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *QuestionQuery) GetVersionName() string {
	if x != nil {
		return x.VersionName
	}
	return ""
}

func (x *QuestionQuery) GetChapterId() string {
	if x != nil {
		return x.ChapterId
	}
	return ""
}

func (x *QuestionQuery) GetChapterName() string {
	if x != nil {
		return x.ChapterName
	}
	return ""
}

func (x *QuestionQuery) GetTiXingId() string {
	if x != nil {
		return x.TiXingId
	}
	return ""
}

func (x *QuestionQuery) GetTiXingName() string {
	if x != nil {
		return x.TiXingName
	}
	return ""
}

func (x *QuestionQuery) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *QuestionQuery) GetSourceName() string {
	if x != nil {
		return x.SourceName
	}
	return ""
}

func (x *QuestionQuery) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QuestionQuery) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *QuestionQuery) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *QuestionQuery) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type VersionItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	SubjectId string `protobuf:"bytes,2,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Sign      string `protobuf:"bytes,4,opt,name=sign,proto3" json:"sign,omitempty"`
	CreateAt  string `protobuf:"bytes,5,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
}

func (x *VersionItem) Reset() {
	*x = VersionItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionItem) ProtoMessage() {}

func (x *VersionItem) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionItem.ProtoReflect.Descriptor instead.
func (*VersionItem) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{5}
}

func (x *VersionItem) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *VersionItem) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *VersionItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VersionItem) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *VersionItem) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

type QuestionOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: form:"name"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// @inject_tag: form:"images"
	Images []string `protobuf:"bytes,2,rep,name=images,proto3" json:"images,omitempty"`
}

func (x *QuestionOption) Reset() {
	*x = QuestionOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionOption) ProtoMessage() {}

func (x *QuestionOption) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionOption.ProtoReflect.Descriptor instead.
func (*QuestionOption) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{6}
}

func (x *QuestionOption) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QuestionOption) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

type Question struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: form:"timu"
	Timu string `protobuf:"bytes,1,opt,name=timu,proto3" json:"timu,omitempty"`
	// @inject_tag: form:"images"
	Images []string `protobuf:"bytes,2,rep,name=images,proto3" json:"images,omitempty"`
	// @inject_tag: form:"options"
	Options []*QuestionOption `protobuf:"bytes,3,rep,name=options,proto3" json:"options,omitempty"`
}

func (x *Question) Reset() {
	*x = Question{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Question) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Question) ProtoMessage() {}

func (x *Question) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Question.ProtoReflect.Descriptor instead.
func (*Question) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{7}
}

func (x *Question) GetTimu() string {
	if x != nil {
		return x.Timu
	}
	return ""
}

func (x *Question) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *Question) GetOptions() []*QuestionOption {
	if x != nil {
		return x.Options
	}
	return nil
}

type TimuItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         string    `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	RollId      string    `protobuf:"bytes,2,opt,name=roll_id,json=rollId,proto3" json:"roll_id,omitempty"`
	RollName    string    `protobuf:"bytes,3,opt,name=roll_name,json=rollName,proto3" json:"roll_name,omitempty"`
	GradeId     string    `protobuf:"bytes,4,opt,name=grade_id,json=gradeId,proto3" json:"grade_id,omitempty"`
	GradeName   string    `protobuf:"bytes,5,opt,name=grade_name,json=gradeName,proto3" json:"grade_name,omitempty"`
	SubjectId   string    `protobuf:"bytes,6,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
	SubjectName string    `protobuf:"bytes,7,opt,name=subject_name,json=subjectName,proto3" json:"subject_name,omitempty"`
	VersionId   string    `protobuf:"bytes,8,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	VersionName string    `protobuf:"bytes,9,opt,name=version_name,json=versionName,proto3" json:"version_name,omitempty"`
	ChapterId   string    `protobuf:"bytes,10,opt,name=chapter_id,json=chapterId,proto3" json:"chapter_id,omitempty"`
	ChapterName string    `protobuf:"bytes,11,opt,name=chapter_name,json=chapterName,proto3" json:"chapter_name,omitempty"`
	ChapterGd   string    `protobuf:"bytes,12,opt,name=chapter_gd,json=chapterGd,proto3" json:"chapter_gd,omitempty"`
	SourceId    string    `protobuf:"bytes,13,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	SourceName  string    `protobuf:"bytes,14,opt,name=source_name,json=sourceName,proto3" json:"source_name,omitempty"`
	TiXingId    string    `protobuf:"bytes,15,opt,name=ti_xing_id,json=tiXingId,proto3" json:"ti_xing_id,omitempty"`
	TiXingName  string    `protobuf:"bytes,16,opt,name=ti_xing_name,json=tiXingName,proto3" json:"ti_xing_name,omitempty"`
	Sign        string    `protobuf:"bytes,17,opt,name=sign,proto3" json:"sign,omitempty"`
	Data        *Question `protobuf:"bytes,18,opt,name=data,proto3" json:"data,omitempty"`
	IsCollect   bool      `protobuf:"varint,19,opt,name=is_collect,json=isCollect,proto3" json:"is_collect,omitempty"`
	CreateAt    string    `protobuf:"bytes,20,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
}

func (x *TimuItem) Reset() {
	*x = TimuItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimuItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimuItem) ProtoMessage() {}

func (x *TimuItem) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimuItem.ProtoReflect.Descriptor instead.
func (*TimuItem) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{8}
}

func (x *TimuItem) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *TimuItem) GetRollId() string {
	if x != nil {
		return x.RollId
	}
	return ""
}

func (x *TimuItem) GetRollName() string {
	if x != nil {
		return x.RollName
	}
	return ""
}

func (x *TimuItem) GetGradeId() string {
	if x != nil {
		return x.GradeId
	}
	return ""
}

func (x *TimuItem) GetGradeName() string {
	if x != nil {
		return x.GradeName
	}
	return ""
}

func (x *TimuItem) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *TimuItem) GetSubjectName() string {
	if x != nil {
		return x.SubjectName
	}
	return ""
}

func (x *TimuItem) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *TimuItem) GetVersionName() string {
	if x != nil {
		return x.VersionName
	}
	return ""
}

func (x *TimuItem) GetChapterId() string {
	if x != nil {
		return x.ChapterId
	}
	return ""
}

func (x *TimuItem) GetChapterName() string {
	if x != nil {
		return x.ChapterName
	}
	return ""
}

func (x *TimuItem) GetChapterGd() string {
	if x != nil {
		return x.ChapterGd
	}
	return ""
}

func (x *TimuItem) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *TimuItem) GetSourceName() string {
	if x != nil {
		return x.SourceName
	}
	return ""
}

func (x *TimuItem) GetTiXingId() string {
	if x != nil {
		return x.TiXingId
	}
	return ""
}

func (x *TimuItem) GetTiXingName() string {
	if x != nil {
		return x.TiXingName
	}
	return ""
}

func (x *TimuItem) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *TimuItem) GetData() *Question {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TimuItem) GetIsCollect() bool {
	if x != nil {
		return x.IsCollect
	}
	return false
}

func (x *TimuItem) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

type TixingItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	VersionId string `protobuf:"bytes,2,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	ChapterId string `protobuf:"bytes,3,opt,name=chapter_id,json=chapterId,proto3" json:"chapter_id,omitempty"`
	Name      string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Sign      string `protobuf:"bytes,5,opt,name=sign,proto3" json:"sign,omitempty"`
	CreateAt  string `protobuf:"bytes,6,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
}

func (x *TixingItem) Reset() {
	*x = TixingItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TixingItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TixingItem) ProtoMessage() {}

func (x *TixingItem) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TixingItem.ProtoReflect.Descriptor instead.
func (*TixingItem) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{9}
}

func (x *TixingItem) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *TixingItem) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *TixingItem) GetChapterId() string {
	if x != nil {
		return x.ChapterId
	}
	return ""
}

func (x *TixingItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TixingItem) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *TixingItem) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

type SourceItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	VersionId string `protobuf:"bytes,2,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	ChapterId string `protobuf:"bytes,3,opt,name=chapter_id,json=chapterId,proto3" json:"chapter_id,omitempty"`
	Name      string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Sign      string `protobuf:"bytes,5,opt,name=sign,proto3" json:"sign,omitempty"`
	CreateAt  string `protobuf:"bytes,6,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
}

func (x *SourceItem) Reset() {
	*x = SourceItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceItem) ProtoMessage() {}

func (x *SourceItem) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceItem.ProtoReflect.Descriptor instead.
func (*SourceItem) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{10}
}

func (x *SourceItem) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *SourceItem) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *SourceItem) GetChapterId() string {
	if x != nil {
		return x.ChapterId
	}
	return ""
}

func (x *SourceItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SourceItem) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *SourceItem) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

type ChapterItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	VersionId string `protobuf:"bytes,2,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ChapterGd string `protobuf:"bytes,4,opt,name=chapter_gd,json=chapterGd,proto3" json:"chapter_gd,omitempty"`
	Sign      string `protobuf:"bytes,5,opt,name=sign,proto3" json:"sign,omitempty"`
	CreateAt  string `protobuf:"bytes,6,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
}

func (x *ChapterItem) Reset() {
	*x = ChapterItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChapterItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChapterItem) ProtoMessage() {}

func (x *ChapterItem) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChapterItem.ProtoReflect.Descriptor instead.
func (*ChapterItem) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{11}
}

func (x *ChapterItem) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ChapterItem) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *ChapterItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChapterItem) GetChapterGd() string {
	if x != nil {
		return x.ChapterGd
	}
	return ""
}

func (x *ChapterItem) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *ChapterItem) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

type ModifyMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	RollId      string `protobuf:"bytes,2,opt,name=roll_id,json=rollId,proto3" json:"roll_id,omitempty"`
	RollName    string `protobuf:"bytes,3,opt,name=roll_name,json=rollName,proto3" json:"roll_name,omitempty"`
	GradeId     string `protobuf:"bytes,4,opt,name=grade_id,json=gradeId,proto3" json:"grade_id,omitempty"`
	GradeName   string `protobuf:"bytes,5,opt,name=grade_name,json=gradeName,proto3" json:"grade_name,omitempty"`
	SubjectId   string `protobuf:"bytes,6,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
	SubjectName string `protobuf:"bytes,7,opt,name=subject_name,json=subjectName,proto3" json:"subject_name,omitempty"`
	VersionId   string `protobuf:"bytes,8,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	VersionName string `protobuf:"bytes,9,opt,name=version_name,json=versionName,proto3" json:"version_name,omitempty"`
	ChapterId   string `protobuf:"bytes,10,opt,name=chapter_id,json=chapterId,proto3" json:"chapter_id,omitempty"`
	ChapterName string `protobuf:"bytes,11,opt,name=chapter_name,json=chapterName,proto3" json:"chapter_name,omitempty"`
	ChapterGd   string `protobuf:"bytes,12,opt,name=chapter_gd,json=chapterGd,proto3" json:"chapter_gd,omitempty"`
	SourceId    string `protobuf:"bytes,13,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	SourceName  string `protobuf:"bytes,14,opt,name=source_name,json=sourceName,proto3" json:"source_name,omitempty"`
	TiXingId    string `protobuf:"bytes,15,opt,name=ti_xing_id,json=tiXingId,proto3" json:"ti_xing_id,omitempty"`
	TiXingName  string `protobuf:"bytes,16,opt,name=ti_xing_name,json=tiXingName,proto3" json:"ti_xing_name,omitempty"`
	Sign        string `protobuf:"bytes,17,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *ModifyMeta) Reset() {
	*x = ModifyMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyMeta) ProtoMessage() {}

func (x *ModifyMeta) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyMeta.ProtoReflect.Descriptor instead.
func (*ModifyMeta) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{12}
}

func (x *ModifyMeta) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ModifyMeta) GetRollId() string {
	if x != nil {
		return x.RollId
	}
	return ""
}

func (x *ModifyMeta) GetRollName() string {
	if x != nil {
		return x.RollName
	}
	return ""
}

func (x *ModifyMeta) GetGradeId() string {
	if x != nil {
		return x.GradeId
	}
	return ""
}

func (x *ModifyMeta) GetGradeName() string {
	if x != nil {
		return x.GradeName
	}
	return ""
}

func (x *ModifyMeta) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *ModifyMeta) GetSubjectName() string {
	if x != nil {
		return x.SubjectName
	}
	return ""
}

func (x *ModifyMeta) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *ModifyMeta) GetVersionName() string {
	if x != nil {
		return x.VersionName
	}
	return ""
}

func (x *ModifyMeta) GetChapterId() string {
	if x != nil {
		return x.ChapterId
	}
	return ""
}

func (x *ModifyMeta) GetChapterName() string {
	if x != nil {
		return x.ChapterName
	}
	return ""
}

func (x *ModifyMeta) GetChapterGd() string {
	if x != nil {
		return x.ChapterGd
	}
	return ""
}

func (x *ModifyMeta) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *ModifyMeta) GetSourceName() string {
	if x != nil {
		return x.SourceName
	}
	return ""
}

func (x *ModifyMeta) GetTiXingId() string {
	if x != nil {
		return x.TiXingId
	}
	return ""
}

func (x *ModifyMeta) GetTiXingName() string {
	if x != nil {
		return x.TiXingName
	}
	return ""
}

func (x *ModifyMeta) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

type ModifyItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Userid      int64       `protobuf:"varint,2,opt,name=userid,proto3" json:"userid,omitempty"`
	TiMuId      string      `protobuf:"bytes,3,opt,name=ti_mu_id,json=tiMuId,proto3" json:"ti_mu_id,omitempty"`
	Source      *Question   `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	Data        *Question   `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	Sign        string      `protobuf:"bytes,6,opt,name=sign,proto3" json:"sign,omitempty"`
	Status      string      `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	Msg         string      `protobuf:"bytes,8,opt,name=msg,proto3" json:"msg,omitempty"`
	Meta        *ModifyMeta `protobuf:"bytes,9,opt,name=meta,proto3" json:"meta,omitempty"`
	Confirmer   string      `protobuf:"bytes,10,opt,name=confirmer,proto3" json:"confirmer,omitempty"`
	CreateAt    string      `protobuf:"bytes,11,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	UpdateAt    string      `protobuf:"bytes,12,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
	Username    string      `protobuf:"bytes,13,opt,name=username,proto3" json:"username,omitempty"`
	Confirmname string      `protobuf:"bytes,14,opt,name=confirmname,proto3" json:"confirmname,omitempty"`
	Reward      float64     `protobuf:"fixed64,15,opt,name=reward,proto3" json:"reward,omitempty"`
}

func (x *ModifyItem) Reset() {
	*x = ModifyItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyItem) ProtoMessage() {}

func (x *ModifyItem) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyItem.ProtoReflect.Descriptor instead.
func (*ModifyItem) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{13}
}

func (x *ModifyItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModifyItem) GetUserid() int64 {
	if x != nil {
		return x.Userid
	}
	return 0
}

func (x *ModifyItem) GetTiMuId() string {
	if x != nil {
		return x.TiMuId
	}
	return ""
}

func (x *ModifyItem) GetSource() *Question {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *ModifyItem) GetData() *Question {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ModifyItem) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *ModifyItem) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ModifyItem) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ModifyItem) GetMeta() *ModifyMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *ModifyItem) GetConfirmer() string {
	if x != nil {
		return x.Confirmer
	}
	return ""
}

func (x *ModifyItem) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *ModifyItem) GetUpdateAt() string {
	if x != nil {
		return x.UpdateAt
	}
	return ""
}

func (x *ModifyItem) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ModifyItem) GetConfirmname() string {
	if x != nil {
		return x.Confirmname
	}
	return ""
}

func (x *ModifyItem) GetReward() float64 {
	if x != nil {
		return x.Reward
	}
	return 0
}

type SearchHitsTotal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value    int64  `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Relation string `protobuf:"bytes,2,opt,name=relation,proto3" json:"relation,omitempty"`
}

func (x *SearchHitsTotal) Reset() {
	*x = SearchHitsTotal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchHitsTotal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchHitsTotal) ProtoMessage() {}

func (x *SearchHitsTotal) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchHitsTotal.ProtoReflect.Descriptor instead.
func (*SearchHitsTotal) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{14}
}

func (x *SearchHitsTotal) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *SearchHitsTotal) GetRelation() string {
	if x != nil {
		return x.Relation
	}
	return ""
}

type HighItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	High []string `protobuf:"bytes,1,rep,name=high,proto3" json:"high,omitempty"`
}

func (x *HighItem) Reset() {
	*x = HighItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HighItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HighItem) ProtoMessage() {}

func (x *HighItem) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HighItem.ProtoReflect.Descriptor instead.
func (*HighItem) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{15}
}

func (x *HighItem) GetHigh() []string {
	if x != nil {
		return x.High
	}
	return nil
}

type SearchHitsItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index  string    `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
	Type   string    `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Id     string    `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Score  float64   `protobuf:"fixed64,4,opt,name=score,proto3" json:"score,omitempty"`
	Source *TimuItem `protobuf:"bytes,5,opt,name=source,proto3" json:"source,omitempty"`
	// proto not support map<string,repeated string>
	HighLight map[string]*HighItem `protobuf:"bytes,6,rep,name=high_light,json=highLight,proto3" json:"high_light,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SearchHitsItem) Reset() {
	*x = SearchHitsItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchHitsItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchHitsItem) ProtoMessage() {}

func (x *SearchHitsItem) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchHitsItem.ProtoReflect.Descriptor instead.
func (*SearchHitsItem) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{16}
}

func (x *SearchHitsItem) GetIndex() string {
	if x != nil {
		return x.Index
	}
	return ""
}

func (x *SearchHitsItem) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SearchHitsItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SearchHitsItem) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *SearchHitsItem) GetSource() *TimuItem {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *SearchHitsItem) GetHighLight() map[string]*HighItem {
	if x != nil {
		return x.HighLight
	}
	return nil
}

type SearchHits struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total    *SearchHitsTotal  `protobuf:"bytes,1,opt,name=total,proto3" json:"total,omitempty"`
	MaxScore float64           `protobuf:"fixed64,2,opt,name=max_score,json=maxScore,proto3" json:"max_score,omitempty"`
	Hits     []*SearchHitsItem `protobuf:"bytes,3,rep,name=hits,proto3" json:"hits,omitempty"`
}

func (x *SearchHits) Reset() {
	*x = SearchHits{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchHits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchHits) ProtoMessage() {}

func (x *SearchHits) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchHits.ProtoReflect.Descriptor instead.
func (*SearchHits) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{17}
}

func (x *SearchHits) GetTotal() *SearchHitsTotal {
	if x != nil {
		return x.Total
	}
	return nil
}

func (x *SearchHits) GetMaxScore() float64 {
	if x != nil {
		return x.MaxScore
	}
	return 0
}

func (x *SearchHits) GetHits() []*SearchHitsItem {
	if x != nil {
		return x.Hits
	}
	return nil
}

type SearchShards struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total      int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Successful int64 `protobuf:"varint,2,opt,name=successful,proto3" json:"successful,omitempty"`
	Skipped    int64 `protobuf:"varint,3,opt,name=skipped,proto3" json:"skipped,omitempty"`
	Failed     int64 `protobuf:"varint,4,opt,name=failed,proto3" json:"failed,omitempty"`
}

func (x *SearchShards) Reset() {
	*x = SearchShards{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchShards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchShards) ProtoMessage() {}

func (x *SearchShards) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchShards.ProtoReflect.Descriptor instead.
func (*SearchShards) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{18}
}

func (x *SearchShards) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SearchShards) GetSuccessful() int64 {
	if x != nil {
		return x.Successful
	}
	return 0
}

func (x *SearchShards) GetSkipped() int64 {
	if x != nil {
		return x.Skipped
	}
	return 0
}

func (x *SearchShards) GetFailed() int64 {
	if x != nil {
		return x.Failed
	}
	return 0
}

type SearchTopic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Took    int32         `protobuf:"varint,1,opt,name=took,proto3" json:"took,omitempty"`
	TimeOut bool          `protobuf:"varint,2,opt,name=time_out,json=timeOut,proto3" json:"time_out,omitempty"`
	Shards  *SearchShards `protobuf:"bytes,3,opt,name=shards,proto3" json:"shards,omitempty"`
	Hits    *SearchHits   `protobuf:"bytes,4,opt,name=hits,proto3" json:"hits,omitempty"`
}

func (x *SearchTopic) Reset() {
	*x = SearchTopic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTopic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTopic) ProtoMessage() {}

func (x *SearchTopic) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTopic.ProtoReflect.Descriptor instead.
func (*SearchTopic) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{19}
}

func (x *SearchTopic) GetTook() int32 {
	if x != nil {
		return x.Took
	}
	return 0
}

func (x *SearchTopic) GetTimeOut() bool {
	if x != nil {
		return x.TimeOut
	}
	return false
}

func (x *SearchTopic) GetShards() *SearchShards {
	if x != nil {
		return x.Shards
	}
	return nil
}

func (x *SearchTopic) GetHits() *SearchHits {
	if x != nil {
		return x.Hits
	}
	return nil
}

type GradeCate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	RollId   string `protobuf:"bytes,2,opt,name=roll_id,json=rollId,proto3" json:"roll_id,omitempty"`
	Sort     int64  `protobuf:"varint,3,opt,name=sort,proto3" json:"sort,omitempty"`
	Name     string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	CreateAt string `protobuf:"bytes,5,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
}

func (x *GradeCate) Reset() {
	*x = GradeCate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GradeCate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GradeCate) ProtoMessage() {}

func (x *GradeCate) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GradeCate.ProtoReflect.Descriptor instead.
func (*GradeCate) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{20}
}

func (x *GradeCate) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GradeCate) GetRollId() string {
	if x != nil {
		return x.RollId
	}
	return ""
}

func (x *GradeCate) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *GradeCate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GradeCate) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

type SchoolStatic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    int64    `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Title   string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Content []string `protobuf:"bytes,3,rep,name=content,proto3" json:"content,omitempty"`
	Href    string   `protobuf:"bytes,4,opt,name=href,proto3" json:"href,omitempty"`
	Target  string   `protobuf:"bytes,5,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *SchoolStatic) Reset() {
	*x = SchoolStatic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchoolStatic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchoolStatic) ProtoMessage() {}

func (x *SchoolStatic) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchoolStatic.ProtoReflect.Descriptor instead.
func (*SchoolStatic) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{21}
}

func (x *SchoolStatic) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *SchoolStatic) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SchoolStatic) GetContent() []string {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *SchoolStatic) GetHref() string {
	if x != nil {
		return x.Href
	}
	return ""
}

func (x *SchoolStatic) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

type GradeItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid     string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Sort    int64  `protobuf:"varint,3,opt,name=sort,proto3" json:"sort,omitempty"`
	Href    string `protobuf:"bytes,4,opt,name=href,proto3" json:"href,omitempty"`
	Heritid string `protobuf:"bytes,5,opt,name=heritid,proto3" json:"heritid,omitempty"`
}

func (x *GradeItem) Reset() {
	*x = GradeItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GradeItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GradeItem) ProtoMessage() {}

func (x *GradeItem) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GradeItem.ProtoReflect.Descriptor instead.
func (*GradeItem) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{22}
}

func (x *GradeItem) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GradeItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GradeItem) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *GradeItem) GetHref() string {
	if x != nil {
		return x.Href
	}
	return ""
}

func (x *GradeItem) GetHeritid() string {
	if x != nil {
		return x.Heritid
	}
	return ""
}

type GradeSubject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RollUid   string       `protobuf:"bytes,1,opt,name=roll_uid,json=rollUid,proto3" json:"roll_uid,omitempty"`
	GradeUid  string       `protobuf:"bytes,2,opt,name=grade_uid,json=gradeUid,proto3" json:"grade_uid,omitempty"`
	GradeName string       `protobuf:"bytes,3,opt,name=grade_name,json=gradeName,proto3" json:"grade_name,omitempty"`
	Sort      int64        `protobuf:"varint,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Subjects  []*GradeItem `protobuf:"bytes,5,rep,name=subjects,proto3" json:"subjects,omitempty"`
}

func (x *GradeSubject) Reset() {
	*x = GradeSubject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GradeSubject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GradeSubject) ProtoMessage() {}

func (x *GradeSubject) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GradeSubject.ProtoReflect.Descriptor instead.
func (*GradeSubject) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{23}
}

func (x *GradeSubject) GetRollUid() string {
	if x != nil {
		return x.RollUid
	}
	return ""
}

func (x *GradeSubject) GetGradeUid() string {
	if x != nil {
		return x.GradeUid
	}
	return ""
}

func (x *GradeSubject) GetGradeName() string {
	if x != nil {
		return x.GradeName
	}
	return ""
}

func (x *GradeSubject) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *GradeSubject) GetSubjects() []*GradeItem {
	if x != nil {
		return x.Subjects
	}
	return nil
}

type SchoolRoll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Index    int64  `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Name     string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	CreateAt string `protobuf:"bytes,4,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
}

func (x *SchoolRoll) Reset() {
	*x = SchoolRoll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchoolRoll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchoolRoll) ProtoMessage() {}

func (x *SchoolRoll) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchoolRoll.ProtoReflect.Descriptor instead.
func (*SchoolRoll) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{24}
}

func (x *SchoolRoll) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *SchoolRoll) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *SchoolRoll) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SchoolRoll) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

type SubjectCate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	RollId   string `protobuf:"bytes,2,opt,name=roll_id,json=rollId,proto3" json:"roll_id,omitempty"`
	GradeId  string `protobuf:"bytes,3,opt,name=grade_id,json=gradeId,proto3" json:"grade_id,omitempty"`
	Subject  string `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"`
	Sort     int64  `protobuf:"varint,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Href     string `protobuf:"bytes,6,opt,name=href,proto3" json:"href,omitempty"`
	CreateAt string `protobuf:"bytes,7,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
}

func (x *SubjectCate) Reset() {
	*x = SubjectCate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubjectCate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubjectCate) ProtoMessage() {}

func (x *SubjectCate) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubjectCate.ProtoReflect.Descriptor instead.
func (*SubjectCate) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{25}
}

func (x *SubjectCate) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *SubjectCate) GetRollId() string {
	if x != nil {
		return x.RollId
	}
	return ""
}

func (x *SubjectCate) GetGradeId() string {
	if x != nil {
		return x.GradeId
	}
	return ""
}

func (x *SubjectCate) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *SubjectCate) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *SubjectCate) GetHref() string {
	if x != nil {
		return x.Href
	}
	return ""
}

func (x *SubjectCate) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

type SearchHistoryItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword string            `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Weight  float64           `protobuf:"fixed64,2,opt,name=weight,proto3" json:"weight,omitempty"`
	Source  string            `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	Extra   map[string]string `protobuf:"bytes,4,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SearchHistoryItem) Reset() {
	*x = SearchHistoryItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchHistoryItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchHistoryItem) ProtoMessage() {}

func (x *SearchHistoryItem) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchHistoryItem.ProtoReflect.Descriptor instead.
func (*SearchHistoryItem) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{26}
}

func (x *SearchHistoryItem) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *SearchHistoryItem) GetWeight() float64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *SearchHistoryItem) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *SearchHistoryItem) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Avatar   string `protobuf:"bytes,1,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Sex      int32  `protobuf:"varint,3,opt,name=sex,proto3" json:"sex,omitempty"`
	Province string `protobuf:"bytes,4,opt,name=province,proto3" json:"province,omitempty"`
	City     string `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	Country  string `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	Vip      int64  `protobuf:"varint,7,opt,name=vip,proto3" json:"vip,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{27}
}

func (x *UserInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UserInfo) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *UserInfo) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *UserInfo) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UserInfo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *UserInfo) GetVip() int64 {
	if x != nil {
		return x.Vip
	}
	return 0
}

type WechatUserinfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Openid     string   `protobuf:"bytes,1,opt,name=openid,proto3" json:"openid,omitempty"`
	Nickname   string   `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Sex        int32    `protobuf:"varint,3,opt,name=sex,proto3" json:"sex,omitempty"`
	Province   string   `protobuf:"bytes,4,opt,name=province,proto3" json:"province,omitempty"`
	City       string   `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	Country    string   `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	Headimgurl string   `protobuf:"bytes,7,opt,name=headimgurl,proto3" json:"headimgurl,omitempty"`
	Privilege  []string `protobuf:"bytes,8,rep,name=privilege,proto3" json:"privilege,omitempty"`
	Unionid    string   `protobuf:"bytes,9,opt,name=unionid,proto3" json:"unionid,omitempty"`
}

func (x *WechatUserinfo) Reset() {
	*x = WechatUserinfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatUserinfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatUserinfo) ProtoMessage() {}

func (x *WechatUserinfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatUserinfo.ProtoReflect.Descriptor instead.
func (*WechatUserinfo) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{28}
}

func (x *WechatUserinfo) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *WechatUserinfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *WechatUserinfo) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *WechatUserinfo) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *WechatUserinfo) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *WechatUserinfo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *WechatUserinfo) GetHeadimgurl() string {
	if x != nil {
		return x.Headimgurl
	}
	return ""
}

func (x *WechatUserinfo) GetPrivilege() []string {
	if x != nil {
		return x.Privilege
	}
	return nil
}

func (x *WechatUserinfo) GetUnionid() string {
	if x != nil {
		return x.Unionid
	}
	return ""
}

type AlipayUserinfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg      string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	UserId   string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Avatar   string `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Province string `protobuf:"bytes,5,opt,name=province,proto3" json:"province,omitempty"`
	City     string `protobuf:"bytes,6,opt,name=city,proto3" json:"city,omitempty"`
	NickName string `protobuf:"bytes,7,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`
	Gender   string `protobuf:"bytes,8,opt,name=gender,proto3" json:"gender,omitempty"`
}

func (x *AlipayUserinfo) Reset() {
	*x = AlipayUserinfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlipayUserinfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlipayUserinfo) ProtoMessage() {}

func (x *AlipayUserinfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlipayUserinfo.ProtoReflect.Descriptor instead.
func (*AlipayUserinfo) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{29}
}

func (x *AlipayUserinfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AlipayUserinfo) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AlipayUserinfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AlipayUserinfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *AlipayUserinfo) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *AlipayUserinfo) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *AlipayUserinfo) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *AlipayUserinfo) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

type BaiduConcept struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level1 string `protobuf:"bytes,1,opt,name=level1,proto3" json:"level1,omitempty"` // 一级概
	Level2 string `protobuf:"bytes,2,opt,name=level2,proto3" json:"level2,omitempty"` // 二级概念
}

func (x *BaiduConcept) Reset() {
	*x = BaiduConcept{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaiduConcept) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaiduConcept) ProtoMessage() {}

func (x *BaiduConcept) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaiduConcept.ProtoReflect.Descriptor instead.
func (*BaiduConcept) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{30}
}

func (x *BaiduConcept) GetLevel1() string {
	if x != nil {
		return x.Level1
	}
	return ""
}

func (x *BaiduConcept) GetLevel2() string {
	if x != nil {
		return x.Level2
	}
	return ""
}

type BaiduEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status          string        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`                   // 用于对关联结果进行标识
	Confidence      string        `protobuf:"bytes,2,opt,name=confidence,proto3" json:"confidence,omitempty"`           // 实体关联至该@id的置信度
	AnnoType        string        `protobuf:"bytes,3,opt,name=annoType,proto3" json:"annoType,omitempty"`               // 标注类型：Instance | Category | Property
	Concept         *BaiduConcept `protobuf:"bytes,4,opt,name=concept,proto3" json:"concept,omitempty"`                 // 概念标注结果
	BdbkKgId        string        `protobuf:"bytes,5,opt,name=bdbkKgId,proto3" json:"bdbkKgId,omitempty"`               // 百科newid
	MainReqRankList string        `protobuf:"bytes,6,opt,name=mainReqRankList,proto3" json:"mainReqRankList,omitempty"` // 主需求实体，列出所有候选实体信息，根据热度从高到低排列
	BdbkUrl         string        `protobuf:"bytes,7,opt,name=bdbkUrl,proto3" json:"bdbkUrl,omitempty"`                 // 百科url
	Offset          string        `protobuf:"bytes,8,opt,name=offset,proto3" json:"offset,omitempty"`
	Desc            string        `protobuf:"bytes,9,opt,name=desc,proto3" json:"desc,omitempty"`        // 实体的简介
	Mention         string        `protobuf:"bytes,10,opt,name=mention,proto3" json:"mention,omitempty"` // 实体名
}

func (x *BaiduEntity) Reset() {
	*x = BaiduEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaiduEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaiduEntity) ProtoMessage() {}

func (x *BaiduEntity) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaiduEntity.ProtoReflect.Descriptor instead.
func (*BaiduEntity) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{31}
}

func (x *BaiduEntity) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *BaiduEntity) GetConfidence() string {
	if x != nil {
		return x.Confidence
	}
	return ""
}

func (x *BaiduEntity) GetAnnoType() string {
	if x != nil {
		return x.AnnoType
	}
	return ""
}

func (x *BaiduEntity) GetConcept() *BaiduConcept {
	if x != nil {
		return x.Concept
	}
	return nil
}

func (x *BaiduEntity) GetBdbkKgId() string {
	if x != nil {
		return x.BdbkKgId
	}
	return ""
}

func (x *BaiduEntity) GetMainReqRankList() string {
	if x != nil {
		return x.MainReqRankList
	}
	return ""
}

func (x *BaiduEntity) GetBdbkUrl() string {
	if x != nil {
		return x.BdbkUrl
	}
	return ""
}

func (x *BaiduEntity) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *BaiduEntity) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *BaiduEntity) GetMention() string {
	if x != nil {
		return x.Mention
	}
	return ""
}

type AddTimuItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RollId       string    `protobuf:"bytes,1,opt,name=roll_id,json=rollId,proto3" json:"roll_id,omitempty"`
	RollName     string    `protobuf:"bytes,2,opt,name=roll_name,json=rollName,proto3" json:"roll_name,omitempty"`
	GradeId      string    `protobuf:"bytes,3,opt,name=grade_id,json=gradeId,proto3" json:"grade_id,omitempty"`
	GradeName    string    `protobuf:"bytes,4,opt,name=grade_name,json=gradeName,proto3" json:"grade_name,omitempty"`
	SubjectId    string    `protobuf:"bytes,5,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
	SubjectName  string    `protobuf:"bytes,6,opt,name=subject_name,json=subjectName,proto3" json:"subject_name,omitempty"`
	VersionId    string    `protobuf:"bytes,7,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	VersionName  string    `protobuf:"bytes,8,opt,name=version_name,json=versionName,proto3" json:"version_name,omitempty"`
	ChapterId    string    `protobuf:"bytes,9,opt,name=chapter_id,json=chapterId,proto3" json:"chapter_id,omitempty"`
	ChapterName  string    `protobuf:"bytes,10,opt,name=chapter_name,json=chapterName,proto3" json:"chapter_name,omitempty"`
	ChapterGd    string    `protobuf:"bytes,11,opt,name=chapter_gd,json=chapterGd,proto3" json:"chapter_gd,omitempty"`
	SourceId     string    `protobuf:"bytes,12,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	SourceName   string    `protobuf:"bytes,13,opt,name=source_name,json=sourceName,proto3" json:"source_name,omitempty"`
	TiXingId     string    `protobuf:"bytes,14,opt,name=ti_xing_id,json=tiXingId,proto3" json:"ti_xing_id,omitempty"`
	TiXingName   string    `protobuf:"bytes,15,opt,name=ti_xing_name,json=tiXingName,proto3" json:"ti_xing_name,omitempty"`
	Sign         string    `protobuf:"bytes,16,opt,name=sign,proto3" json:"sign,omitempty"`
	Data         *Question `protobuf:"bytes,17,opt,name=data,proto3" json:"data,omitempty"`
	UserId       int64     `protobuf:"varint,18,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName     string    `protobuf:"bytes,19,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Approvor     int64     `protobuf:"varint,20,opt,name=approvor,proto3" json:"approvor,omitempty"`
	ApprovorName string    `protobuf:"bytes,21,opt,name=approvor_name,json=approvorName,proto3" json:"approvor_name,omitempty"`
	CreateAt     string    `protobuf:"bytes,22,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	Msg          string    `protobuf:"bytes,23,opt,name=msg,proto3" json:"msg,omitempty"`
	Status       string    `protobuf:"bytes,24,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *AddTimuItem) Reset() {
	*x = AddTimuItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTimuItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTimuItem) ProtoMessage() {}

func (x *AddTimuItem) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTimuItem.ProtoReflect.Descriptor instead.
func (*AddTimuItem) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{32}
}

func (x *AddTimuItem) GetRollId() string {
	if x != nil {
		return x.RollId
	}
	return ""
}

func (x *AddTimuItem) GetRollName() string {
	if x != nil {
		return x.RollName
	}
	return ""
}

func (x *AddTimuItem) GetGradeId() string {
	if x != nil {
		return x.GradeId
	}
	return ""
}

func (x *AddTimuItem) GetGradeName() string {
	if x != nil {
		return x.GradeName
	}
	return ""
}

func (x *AddTimuItem) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *AddTimuItem) GetSubjectName() string {
	if x != nil {
		return x.SubjectName
	}
	return ""
}

func (x *AddTimuItem) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *AddTimuItem) GetVersionName() string {
	if x != nil {
		return x.VersionName
	}
	return ""
}

func (x *AddTimuItem) GetChapterId() string {
	if x != nil {
		return x.ChapterId
	}
	return ""
}

func (x *AddTimuItem) GetChapterName() string {
	if x != nil {
		return x.ChapterName
	}
	return ""
}

func (x *AddTimuItem) GetChapterGd() string {
	if x != nil {
		return x.ChapterGd
	}
	return ""
}

func (x *AddTimuItem) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *AddTimuItem) GetSourceName() string {
	if x != nil {
		return x.SourceName
	}
	return ""
}

func (x *AddTimuItem) GetTiXingId() string {
	if x != nil {
		return x.TiXingId
	}
	return ""
}

func (x *AddTimuItem) GetTiXingName() string {
	if x != nil {
		return x.TiXingName
	}
	return ""
}

func (x *AddTimuItem) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *AddTimuItem) GetData() *Question {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *AddTimuItem) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddTimuItem) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *AddTimuItem) GetApprovor() int64 {
	if x != nil {
		return x.Approvor
	}
	return 0
}

func (x *AddTimuItem) GetApprovorName() string {
	if x != nil {
		return x.ApprovorName
	}
	return ""
}

func (x *AddTimuItem) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *AddTimuItem) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AddTimuItem) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type BaiduWordLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Top    int32 `protobuf:"varint,1,opt,name=top,proto3" json:"top,omitempty"`
	Left   int32 `protobuf:"varint,2,opt,name=left,proto3" json:"left,omitempty"`
	Width  int32 `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height int32 `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *BaiduWordLocation) Reset() {
	*x = BaiduWordLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaiduWordLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaiduWordLocation) ProtoMessage() {}

func (x *BaiduWordLocation) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaiduWordLocation.ProtoReflect.Descriptor instead.
func (*BaiduWordLocation) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{33}
}

func (x *BaiduWordLocation) GetTop() int32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *BaiduWordLocation) GetLeft() int32 {
	if x != nil {
		return x.Left
	}
	return 0
}

func (x *BaiduWordLocation) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *BaiduWordLocation) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type BaiduLineProbability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BaiduLineProbability) Reset() {
	*x = BaiduLineProbability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaiduLineProbability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaiduLineProbability) ProtoMessage() {}

func (x *BaiduLineProbability) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaiduLineProbability.ProtoReflect.Descriptor instead.
func (*BaiduLineProbability) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{34}
}

type BaiduWordsItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location    *BaiduWordLocation    `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Probability *BaiduLineProbability `protobuf:"bytes,2,opt,name=probability,proto3" json:"probability,omitempty"`
	Word        string                `protobuf:"bytes,3,opt,name=word,proto3" json:"word,omitempty"`
}

func (x *BaiduWordsItem) Reset() {
	*x = BaiduWordsItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaiduWordsItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaiduWordsItem) ProtoMessage() {}

func (x *BaiduWordsItem) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaiduWordsItem.ProtoReflect.Descriptor instead.
func (*BaiduWordsItem) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{35}
}

func (x *BaiduWordsItem) GetLocation() *BaiduWordLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *BaiduWordsItem) GetProbability() *BaiduLineProbability {
	if x != nil {
		return x.Probability
	}
	return nil
}

func (x *BaiduWordsItem) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

type BaiduResultItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WordsType string          `protobuf:"bytes,1,opt,name=words_type,json=wordsType,proto3" json:"words_type,omitempty"`
	Word      *BaiduWordsItem `protobuf:"bytes,2,opt,name=word,proto3" json:"word,omitempty"`
}

func (x *BaiduResultItem) Reset() {
	*x = BaiduResultItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaiduResultItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaiduResultItem) ProtoMessage() {}

func (x *BaiduResultItem) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaiduResultItem.ProtoReflect.Descriptor instead.
func (*BaiduResultItem) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{36}
}

func (x *BaiduResultItem) GetWordsType() string {
	if x != nil {
		return x.WordsType
	}
	return ""
}

func (x *BaiduResultItem) GetWord() *BaiduWordsItem {
	if x != nil {
		return x.Word
	}
	return nil
}

type BaiduDocAnalysis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogId        int64              `protobuf:"varint,1,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
	ImgDirection int32              `protobuf:"varint,2,opt,name=img_direction,json=imgDirection,proto3" json:"img_direction,omitempty"`
	ResultsNum   int32              `protobuf:"varint,3,opt,name=results_num,json=resultsNum,proto3" json:"results_num,omitempty"`
	LayoutsNum   int32              `protobuf:"varint,4,opt,name=layouts_num,json=layoutsNum,proto3" json:"layouts_num,omitempty"`
	Results      []*BaiduResultItem `protobuf:"bytes,5,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *BaiduDocAnalysis) Reset() {
	*x = BaiduDocAnalysis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaiduDocAnalysis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaiduDocAnalysis) ProtoMessage() {}

func (x *BaiduDocAnalysis) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaiduDocAnalysis.ProtoReflect.Descriptor instead.
func (*BaiduDocAnalysis) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{37}
}

func (x *BaiduDocAnalysis) GetLogId() int64 {
	if x != nil {
		return x.LogId
	}
	return 0
}

func (x *BaiduDocAnalysis) GetImgDirection() int32 {
	if x != nil {
		return x.ImgDirection
	}
	return 0
}

func (x *BaiduDocAnalysis) GetResultsNum() int32 {
	if x != nil {
		return x.ResultsNum
	}
	return 0
}

func (x *BaiduDocAnalysis) GetLayoutsNum() int32 {
	if x != nil {
		return x.LayoutsNum
	}
	return 0
}

func (x *BaiduDocAnalysis) GetResults() []*BaiduResultItem {
	if x != nil {
		return x.Results
	}
	return nil
}

type BaiduIdentItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      int64             `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Iid      string            `protobuf:"bytes,2,opt,name=iid,proto3" json:"iid,omitempty"`
	Sign     string            `protobuf:"bytes,3,opt,name=sign,proto3" json:"sign,omitempty"`
	Status   string            `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Result   *BaiduDocAnalysis `protobuf:"bytes,5,opt,name=result,proto3" json:"result,omitempty"`
	CreateAt string            `protobuf:"bytes,6,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	UpdateAt string            `protobuf:"bytes,7,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
	Reward   float64           `protobuf:"fixed64,8,opt,name=reward,proto3" json:"reward,omitempty"`
	ImageUrl string            `protobuf:"bytes,9,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
}

func (x *BaiduIdentItem) Reset() {
	*x = BaiduIdentItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaiduIdentItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaiduIdentItem) ProtoMessage() {}

func (x *BaiduIdentItem) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaiduIdentItem.ProtoReflect.Descriptor instead.
func (*BaiduIdentItem) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{38}
}

func (x *BaiduIdentItem) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *BaiduIdentItem) GetIid() string {
	if x != nil {
		return x.Iid
	}
	return ""
}

func (x *BaiduIdentItem) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *BaiduIdentItem) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *BaiduIdentItem) GetResult() *BaiduDocAnalysis {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *BaiduIdentItem) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *BaiduIdentItem) GetUpdateAt() string {
	if x != nil {
		return x.UpdateAt
	}
	return ""
}

func (x *BaiduIdentItem) GetReward() float64 {
	if x != nil {
		return x.Reward
	}
	return 0
}

func (x *BaiduIdentItem) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

type NoteMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      int64    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	UserId   int64    `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Title    string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Thumb    string   `protobuf:"bytes,4,opt,name=thumb,proto3" json:"thumb,omitempty"`
	Desc     string   `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc,omitempty"`
	Sign     string   `protobuf:"bytes,6,opt,name=sign,proto3" json:"sign,omitempty"`
	CreateAt string   `protobuf:"bytes,7,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	UpdateAt string   `protobuf:"bytes,8,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
	Tag      []string `protobuf:"bytes,9,rep,name=tag,proto3" json:"tag,omitempty"`
	Data1    string   `protobuf:"bytes,10,opt,name=data1,proto3" json:"data1,omitempty"`
	Data2    string   `protobuf:"bytes,11,opt,name=data2,proto3" json:"data2,omitempty"`
	Status   int64    `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`
	BgColor  string   `protobuf:"bytes,13,opt,name=bg_color,json=bgColor,proto3" json:"bg_color,omitempty"`
	NoteType int64    `protobuf:"varint,14,opt,name=note_type,json=noteType,proto3" json:"note_type,omitempty"`
}

func (x *NoteMeta) Reset() {
	*x = NoteMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoteMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoteMeta) ProtoMessage() {}

func (x *NoteMeta) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoteMeta.ProtoReflect.Descriptor instead.
func (*NoteMeta) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{39}
}

func (x *NoteMeta) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *NoteMeta) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *NoteMeta) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NoteMeta) GetThumb() string {
	if x != nil {
		return x.Thumb
	}
	return ""
}

func (x *NoteMeta) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *NoteMeta) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *NoteMeta) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *NoteMeta) GetUpdateAt() string {
	if x != nil {
		return x.UpdateAt
	}
	return ""
}

func (x *NoteMeta) GetTag() []string {
	if x != nil {
		return x.Tag
	}
	return nil
}

func (x *NoteMeta) GetData1() string {
	if x != nil {
		return x.Data1
	}
	return ""
}

func (x *NoteMeta) GetData2() string {
	if x != nil {
		return x.Data2
	}
	return ""
}

func (x *NoteMeta) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *NoteMeta) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

func (x *NoteMeta) GetNoteType() int64 {
	if x != nil {
		return x.NoteType
	}
	return 0
}

type NoteTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId   int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Tag      string `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
	Lang     string `protobuf:"bytes,4,opt,name=lang,proto3" json:"lang,omitempty"`
	Status   int64  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	CreateAt int64  `protobuf:"varint,6,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
}

func (x *NoteTag) Reset() {
	*x = NoteTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoteTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoteTag) ProtoMessage() {}

func (x *NoteTag) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoteTag.ProtoReflect.Descriptor instead.
func (*NoteTag) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{40}
}

func (x *NoteTag) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NoteTag) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *NoteTag) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *NoteTag) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *NoteTag) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *NoteTag) GetCreateAt() int64 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

type PersonCert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid        int64             `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Idname     string            `protobuf:"bytes,2,opt,name=idname,proto3" json:"idname,omitempty"`
	Idnum      string            `protobuf:"bytes,3,opt,name=idnum,proto3" json:"idnum,omitempty"`
	ImageUp    string            `protobuf:"bytes,4,opt,name=image_up,json=imageUp,proto3" json:"image_up,omitempty"`
	ImageDown  string            `protobuf:"bytes,5,opt,name=image_down,json=imageDown,proto3" json:"image_down,omitempty"`
	ImageFace  string            `protobuf:"bytes,6,opt,name=image_face,json=imageFace,proto3" json:"image_face,omitempty"`
	CertType   int32             `protobuf:"varint,7,opt,name=cert_type,json=certType,proto3" json:"cert_type,omitempty"`
	Status     string            `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	Info       string            `protobuf:"bytes,9,opt,name=info,proto3" json:"info,omitempty"`
	Mark       string            `protobuf:"bytes,10,opt,name=mark,proto3" json:"mark,omitempty"`
	ApprovId   int64             `protobuf:"varint,11,opt,name=approv_id,json=approvId,proto3" json:"approv_id,omitempty"`
	ApprovName string            `protobuf:"bytes,12,opt,name=approv_name,json=approvName,proto3" json:"approv_name,omitempty"`
	SubmitAt   int64             `protobuf:"varint,13,opt,name=submit_at,json=submitAt,proto3" json:"submit_at,omitempty"`
	CreateAt   int64             `protobuf:"varint,14,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	UpdateAt   int64             `protobuf:"varint,15,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
	Data1      string            `protobuf:"bytes,16,opt,name=data1,proto3" json:"data1,omitempty"`
	Data2      string            `protobuf:"bytes,17,opt,name=data2,proto3" json:"data2,omitempty"`
	Extra      map[string]string `protobuf:"bytes,18,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PersonCert) Reset() {
	*x = PersonCert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PersonCert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersonCert) ProtoMessage() {}

func (x *PersonCert) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersonCert.ProtoReflect.Descriptor instead.
func (*PersonCert) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{41}
}

func (x *PersonCert) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *PersonCert) GetIdname() string {
	if x != nil {
		return x.Idname
	}
	return ""
}

func (x *PersonCert) GetIdnum() string {
	if x != nil {
		return x.Idnum
	}
	return ""
}

func (x *PersonCert) GetImageUp() string {
	if x != nil {
		return x.ImageUp
	}
	return ""
}

func (x *PersonCert) GetImageDown() string {
	if x != nil {
		return x.ImageDown
	}
	return ""
}

func (x *PersonCert) GetImageFace() string {
	if x != nil {
		return x.ImageFace
	}
	return ""
}

func (x *PersonCert) GetCertType() int32 {
	if x != nil {
		return x.CertType
	}
	return 0
}

func (x *PersonCert) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PersonCert) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *PersonCert) GetMark() string {
	if x != nil {
		return x.Mark
	}
	return ""
}

func (x *PersonCert) GetApprovId() int64 {
	if x != nil {
		return x.ApprovId
	}
	return 0
}

func (x *PersonCert) GetApprovName() string {
	if x != nil {
		return x.ApprovName
	}
	return ""
}

func (x *PersonCert) GetSubmitAt() int64 {
	if x != nil {
		return x.SubmitAt
	}
	return 0
}

func (x *PersonCert) GetCreateAt() int64 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *PersonCert) GetUpdateAt() int64 {
	if x != nil {
		return x.UpdateAt
	}
	return 0
}

func (x *PersonCert) GetData1() string {
	if x != nil {
		return x.Data1
	}
	return ""
}

func (x *PersonCert) GetData2() string {
	if x != nil {
		return x.Data2
	}
	return ""
}

func (x *PersonCert) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type BaiduIdcardIdent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageStatus int32             `protobuf:"varint,1,opt,name=image_status,json=imageStatus,proto3" json:"image_status,omitempty"` // 0:成功  1:失败
	Idname      string            `protobuf:"bytes,2,opt,name=idname,proto3" json:"idname,omitempty"`
	Idnum       string            `protobuf:"bytes,3,opt,name=idnum,proto3" json:"idnum,omitempty"`
	Address     string            `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Brithday    string            `protobuf:"bytes,5,opt,name=brithday,proto3" json:"brithday,omitempty"`
	Sex         string            `protobuf:"bytes,6,opt,name=sex,proto3" json:"sex,omitempty"`
	Ethnic      string            `protobuf:"bytes,7,opt,name=ethnic,proto3" json:"ethnic,omitempty"` // 民族
	Extra       map[string]string `protobuf:"bytes,8,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *BaiduIdcardIdent) Reset() {
	*x = BaiduIdcardIdent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaiduIdcardIdent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaiduIdcardIdent) ProtoMessage() {}

func (x *BaiduIdcardIdent) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaiduIdcardIdent.ProtoReflect.Descriptor instead.
func (*BaiduIdcardIdent) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{42}
}

func (x *BaiduIdcardIdent) GetImageStatus() int32 {
	if x != nil {
		return x.ImageStatus
	}
	return 0
}

func (x *BaiduIdcardIdent) GetIdname() string {
	if x != nil {
		return x.Idname
	}
	return ""
}

func (x *BaiduIdcardIdent) GetIdnum() string {
	if x != nil {
		return x.Idnum
	}
	return ""
}

func (x *BaiduIdcardIdent) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *BaiduIdcardIdent) GetBrithday() string {
	if x != nil {
		return x.Brithday
	}
	return ""
}

func (x *BaiduIdcardIdent) GetSex() string {
	if x != nil {
		return x.Sex
	}
	return ""
}

func (x *BaiduIdcardIdent) GetEthnic() string {
	if x != nil {
		return x.Ethnic
	}
	return ""
}

func (x *BaiduIdcardIdent) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

// 用户日志
type UserLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid      int64  `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	LogType  int32  `protobuf:"varint,3,opt,name=log_type,json=logType,proto3" json:"log_type,omitempty"`
	LogInfo  string `protobuf:"bytes,4,opt,name=log_info,json=logInfo,proto3" json:"log_info,omitempty"`
	CreateAt string `protobuf:"bytes,5,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
}

func (x *UserLog) Reset() {
	*x = UserLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLog) ProtoMessage() {}

func (x *UserLog) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLog.ProtoReflect.Descriptor instead.
func (*UserLog) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{43}
}

func (x *UserLog) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserLog) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UserLog) GetLogType() int32 {
	if x != nil {
		return x.LogType
	}
	return 0
}

func (x *UserLog) GetLogInfo() string {
	if x != nil {
		return x.LogInfo
	}
	return ""
}

func (x *UserLog) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

type CronItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interval  string            `protobuf:"bytes,1,opt,name=interval,proto3" json:"interval,omitempty"`
	StartAt   string            `protobuf:"bytes,2,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`
	Repeadted bool              `protobuf:"varint,3,opt,name=repeadted,proto3" json:"repeadted,omitempty"`
	Func      string            `protobuf:"bytes,4,opt,name=func,proto3" json:"func,omitempty"`
	Mutitask  bool              `protobuf:"varint,5,opt,name=mutitask,proto3" json:"mutitask,omitempty"`
	Info      string            `protobuf:"bytes,6,opt,name=info,proto3" json:"info,omitempty"`
	Version   string            `protobuf:"bytes,7,opt,name=version,proto3" json:"version,omitempty"`
	Extra     map[string]string `protobuf:"bytes,8,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CronItem) Reset() {
	*x = CronItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CronItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CronItem) ProtoMessage() {}

func (x *CronItem) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CronItem.ProtoReflect.Descriptor instead.
func (*CronItem) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{44}
}

func (x *CronItem) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

func (x *CronItem) GetStartAt() string {
	if x != nil {
		return x.StartAt
	}
	return ""
}

func (x *CronItem) GetRepeadted() bool {
	if x != nil {
		return x.Repeadted
	}
	return false
}

func (x *CronItem) GetFunc() string {
	if x != nil {
		return x.Func
	}
	return ""
}

func (x *CronItem) GetMutitask() bool {
	if x != nil {
		return x.Mutitask
	}
	return false
}

func (x *CronItem) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *CronItem) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *CronItem) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

var File_common_proto protoreflect.FileDescriptor

var file_common_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x15, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x2f,
	0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa1, 0x01,
	0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x75, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x05,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38,
	0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x77, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x90, 0x02, 0x0a, 0x14, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x05,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x6f, 0x6c, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6f, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3d, 0x0a, 0x05, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x69,
	0x6e, 0x66, 0x6f, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xf8, 0x04, 0x0a, 0x0e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x6c, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x72, 0x61, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x0a, 0x74, 0x69, 0x5f, 0x78, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x69, 0x58, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x74,
	0x69, 0x5f, 0x78, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x74, 0x69, 0x58, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x05,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x84, 0x01, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0x3d, 0x0a, 0x0f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x73, 0x22, 0x69, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x31, 0x0a,
	0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0xe6, 0x04, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x75, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c,
	0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f,
	0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x61, 0x64, 0x65, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x5f, 0x67, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x70,
	0x74, 0x65, 0x72, 0x47, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x0a, 0x74, 0x69, 0x5f, 0x78, 0x69, 0x6e, 0x67, 0x5f, 0x69,
	0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x58, 0x69, 0x6e, 0x67, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0c, 0x74, 0x69, 0x5f, 0x78, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x69, 0x58, 0x69, 0x6e, 0x67, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x69, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0xa2, 0x01, 0x0a, 0x0b, 0x74, 0x69,
	0x78, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67,
	0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0xa2,
	0x01, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x74, 0x22, 0xa3, 0x01, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61,
	0x70, 0x74, 0x65, 0x72, 0x5f, 0x67, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x47, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0x86, 0x04, 0x0a, 0x0b, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72,
	0x6f, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f,
	0x6c, 0x6c, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x61, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x67, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x67, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x47, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x0a, 0x74, 0x69, 0x5f, 0x78, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x58, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c,
	0x74, 0x69, 0x5f, 0x78, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x74, 0x69, 0x58, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69,
	0x67, 0x6e, 0x22, 0xb4, 0x03, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x08, 0x74, 0x69,
	0x5f, 0x6d, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69,
	0x4d, 0x75, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x24,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x27, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x45, 0x0a, 0x11, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x5f, 0x68, 0x69, 0x74, 0x73, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x1f, 0x0a, 0x09, 0x68, 0x69, 0x67, 0x68, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x68, 0x69, 0x67,
	0x68, 0x22, 0xa6, 0x02, 0x0a, 0x10, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x68, 0x69, 0x74,
	0x73, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x74, 0x69, 0x6d, 0x75, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x46, 0x0a, 0x0a, 0x68, 0x69, 0x67, 0x68, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x68, 0x69, 0x74, 0x73, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x2e,
	0x48, 0x69, 0x67, 0x68, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09,
	0x68, 0x69, 0x67, 0x68, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x1a, 0x4f, 0x0a, 0x0e, 0x48, 0x69, 0x67,
	0x68, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x27, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x68, 0x69, 0x67, 0x68, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x89, 0x01, 0x0a, 0x0b, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x68, 0x69, 0x74, 0x73, 0x12, 0x2f, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x68, 0x69, 0x74, 0x73, 0x5f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x61, 0x78, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x6d, 0x61, 0x78, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x68, 0x69, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x68, 0x69, 0x74, 0x73, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x52, 0x04, 0x68, 0x69, 0x74, 0x73, 0x22, 0x77, 0x0a, 0x0d, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x5f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x73, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x22,
	0x95, 0x01, 0x0a, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x74, 0x6f, 0x6f, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6f, 0x75, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x12,
	0x2d, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x52, 0x06, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x12, 0x27,
	0x0a, 0x04, 0x68, 0x69, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x68, 0x69, 0x74,
	0x73, 0x52, 0x04, 0x68, 0x69, 0x74, 0x73, 0x22, 0x7c, 0x0a, 0x0a, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x5f, 0x63, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x6c, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0x7f, 0x0a, 0x0d, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x72,
	0x65, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x72, 0x65, 0x66, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x74, 0x0a, 0x0a, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x72, 0x65, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x72,
	0x65, 0x66, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x65, 0x72, 0x69, 0x74, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x65, 0x72, 0x69, 0x74, 0x69, 0x64, 0x22, 0xaa, 0x01, 0x0a,
	0x0d, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x6c, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x72, 0x6f, 0x6c, 0x6c, 0x55, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x55, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x52,
	0x08, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x66, 0x0a, 0x0b, 0x73, 0x63, 0x68,
	0x6f, 0x6f, 0x6c, 0x5f, 0x72, 0x6f, 0x6c, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x74, 0x22, 0xb3, 0x01, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x61,
	0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x72, 0x61, 0x64, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x72, 0x65, 0x66, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x72, 0x65, 0x66, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0xd7, 0x01, 0x0a, 0x13, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x12,
	0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x3c, 0x0a, 0x05, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0xad, 0x01, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x76, 0x69, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x76, 0x69,
	0x70, 0x22, 0xf9, 0x01, 0x0a, 0x0f, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6d, 0x67,
	0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x69,
	0x6d, 0x67, 0x75, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65,
	0x67, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c,
	0x65, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x22, 0xcd, 0x01,
	0x0a, 0x0f, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66,
	0x6f, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x69, 0x63, 0x6b,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x3f, 0x0a,
	0x0d, 0x62, 0x61, 0x69, 0x64, 0x75, 0x5f, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x32,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x22, 0xb9,
	0x02, 0x0a, 0x0c, 0x62, 0x61, 0x69, 0x64, 0x75, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x6e, 0x6e, 0x6f, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x6e, 0x6e, 0x6f, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x62, 0x61,
	0x69, 0x64, 0x75, 0x5f, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x63, 0x65, 0x70, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x64, 0x62, 0x6b, 0x4b, 0x67, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x64, 0x62, 0x6b, 0x4b, 0x67, 0x49, 0x64,
	0x12, 0x28, 0x0a, 0x0f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x61, 0x6e, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x61, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x52, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x64,
	0x62, 0x6b, 0x55, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x64, 0x62,
	0x6b, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xda, 0x05, 0x0a, 0x0d, 0x61,
	0x64, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x75, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07,
	0x72, 0x6f, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x6f, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x6c, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x6c, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x61, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x67, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x67, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x47,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x0a, 0x74, 0x69, 0x5f, 0x78, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x58, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0c, 0x74, 0x69, 0x5f, 0x78, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x69, 0x58, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x69, 0x67, 0x6e, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x6f, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x61,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x69, 0x0a, 0x13, 0x62, 0x61, 0x69, 0x64, 0x75,
	0x5f, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x6f, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x6c, 0x65, 0x66, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x22, 0x18, 0x0a, 0x16, 0x62, 0x61, 0x69, 0x64, 0x75, 0x5f, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x70, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x22, 0xa1, 0x01, 0x0a,
	0x10, 0x62, 0x61, 0x69, 0x64, 0x75, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x12, 0x37, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x62, 0x61, 0x69,
	0x64, 0x75, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x62, 0x61, 0x69, 0x64, 0x75, 0x5f, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x6f, 0x72, 0x64,
	0x22, 0x60, 0x0a, 0x11, 0x62, 0x61, 0x69, 0x64, 0x75, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x64, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x62, 0x61, 0x69, 0x64,
	0x75, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x77, 0x6f,
	0x72, 0x64, 0x22, 0xc7, 0x01, 0x0a, 0x12, 0x62, 0x61, 0x69, 0x64, 0x75, 0x5f, 0x64, 0x6f, 0x63,
	0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x6f, 0x67,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6d, 0x67, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x69, 0x6d, 0x67, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x4e, 0x75, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74,
	0x73, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x61, 0x79,
	0x6f, 0x75, 0x74, 0x73, 0x4e, 0x75, 0x6d, 0x12, 0x33, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x62, 0x61, 0x69, 0x64, 0x75, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x85, 0x02, 0x0a,
	0x10, 0x62, 0x61, 0x69, 0x64, 0x75, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x69, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x32, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x62, 0x61, 0x69, 0x64, 0x75,
	0x5f, 0x64, 0x6f, 0x63, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x55, 0x72, 0x6c, 0x22, 0xd2, 0x02, 0x0a, 0x09, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x6d, 0x65,
	0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67,
	0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74,
	0x61, 0x67, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x14, 0x0a,
	0x05, 0x64, 0x61, 0x74, 0x61, 0x31, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x61,
	0x74, 0x61, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x32, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09,
	0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x6e, 0x6f, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x08, 0x6e, 0x6f,
	0x74, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0xb4, 0x04, 0x0a, 0x0b, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x69, 0x64, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x64,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x64, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x64, 0x6e, 0x75, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x75, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x55, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x64,
	0x6f, 0x77, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x44, 0x6f, 0x77, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x61,
	0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x46,
	0x61, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x61, 0x72, 0x6b,
	0x12, 0x1b, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x31, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x64,
	0x61, 0x74, 0x61, 0x32, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61,
	0x32, 0x12, 0x34, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x5f, 0x63, 0x65, 0x72, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0xbc, 0x02, 0x0a, 0x12, 0x62, 0x61, 0x69, 0x64, 0x75, 0x5f, 0x69, 0x64, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x64, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x64, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x64, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x69, 0x64, 0x6e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x72, 0x69, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x69, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x65,
	0x78, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x74, 0x68, 0x6e, 0x69, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x65, 0x74, 0x68, 0x6e, 0x69, 0x63, 0x12, 0x3b, 0x0a, 0x05, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x62, 0x61, 0x69, 0x64, 0x75, 0x5f, 0x69, 0x64, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x7f, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x6c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x74, 0x22, 0xac, 0x02, 0x0a, 0x09, 0x63, 0x72, 0x6f, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x12,
	0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x65, 0x61, 0x64,
	0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x72, 0x65, 0x70, 0x65, 0x61,
	0x64, 0x74, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x75, 0x6e, 0x63, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x66, 0x75, 0x6e, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x75, 0x74, 0x69,
	0x74, 0x61, 0x73, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6d, 0x75, 0x74, 0x69,
	0x74, 0x61, 0x73, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x63, 0x72, 0x6f, 0x6e, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x2a, 0x4b, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x52, 0x4d,
	0x41, 0x4c, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54,
	0x4f, 0x52, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x45, 0x41, 0x43, 0x48, 0x45, 0x52, 0x10,
	0x02, 0x12, 0x0c, 0x0a, 0x07, 0x53, 0x54, 0x41, 0x46, 0x46, 0x4f, 0x52, 0x10, 0x80, 0x02, 0x12,
	0x0c, 0x0a, 0x07, 0x53, 0x55, 0x50, 0x45, 0x52, 0x4f, 0x52, 0x10, 0x80, 0x04, 0x2a, 0x8b, 0x01,
	0x0a, 0x09, 0x76, 0x69, 0x70, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x15, 0x0a, 0x11, 0x76,
	0x69, 0x70, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x56, 0x49, 0x50, 0x5f, 0x4e, 0x4f, 0x54,
	0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x76, 0x69, 0x70, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f,
	0x56, 0x49, 0x50, 0x5f, 0x31, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14,
	0x76, 0x69, 0x70, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x56, 0x49, 0x50, 0x5f, 0x32, 0x4c,
	0x45, 0x56, 0x45, 0x4c, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x76, 0x69, 0x70, 0x5f, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x5f, 0x56, 0x49, 0x50, 0x5f, 0x33, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x10, 0x03,
	0x12, 0x19, 0x0a, 0x15, 0x76, 0x69, 0x70, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x56, 0x49,
	0x50, 0x5f, 0x31, 0x36, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x10, 0x0f, 0x2a, 0x83, 0x01, 0x0a, 0x0b,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x17, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x46, 0x52, 0x4f, 0x4d, 0x5f,
	0x50, 0x4c, 0x41, 0x54, 0x4f, 0x4d, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x57, 0x45, 0x43,
	0x48, 0x41, 0x54, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x41, 0x4c, 0x49, 0x50, 0x41, 0x59,
	0x10, 0x02, 0x12, 0x1d, 0x0a, 0x18, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x81,
	0x10, 0x2a, 0x63, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x6f, 0x6d,
	0x12, 0x1a, 0x0a, 0x16, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x6f, 0x6d, 0x5f,
	0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17,
	0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x6f, 0x6d, 0x5f, 0x46, 0x52, 0x4f, 0x4d,
	0x5f, 0x57, 0x45, 0x43, 0x48, 0x41, 0x54, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x6f, 0x6d, 0x5f, 0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x41, 0x4c,
	0x49, 0x50, 0x41, 0x59, 0x10, 0x02, 0x2a, 0x52, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x5f, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x52, 0x4f, 0x4d,
	0x5f, 0x47, 0x52, 0x50, 0x41, 0x48, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x52, 0x4f, 0x4d,
	0x5f, 0x43, 0x4c, 0x4f, 0x55, 0x44, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x52, 0x4f, 0x4d,
	0x5f, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45, 0x10, 0x03, 0x2a, 0x55, 0x0a, 0x0c, 0x61, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x1f, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56,
	0x45, 0x5f, 0x54, 0x49, 0x4d, 0x55, 0x5f, 0x4d, 0x4f, 0x44, 0x49, 0x46, 0x59, 0x10, 0x00, 0x12,
	0x20, 0x0a, 0x1c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x41,
	0x50, 0x50, 0x52, 0x4f, 0x56, 0x45, 0x5f, 0x54, 0x49, 0x4d, 0x55, 0x5f, 0x41, 0x44, 0x44, 0x10,
	0x01, 0x2a, 0xb6, 0x01, 0x0a, 0x0e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x15, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12,
	0x1c, 0x0a, 0x18, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x1a, 0x0a,
	0x16, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x41, 0x50, 0x50, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x74, 0x65, 0x61,
	0x63, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x50, 0x41, 0x53, 0x53,
	0x45, 0x44, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x4e, 0x4f, 0x50, 0x41, 0x53, 0x53, 0x10, 0x08, 0x12,
	0x19, 0x0a, 0x15, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x4c, 0x4f, 0x47, 0x4f, 0x55, 0x54, 0x10, 0x10, 0x2a, 0x54, 0x0a, 0x13, 0x74, 0x65,
	0x61, 0x63, 0x68, 0x65, 0x72, 0x32, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1d, 0x0a, 0x19, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x32, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x46, 0x4f, 0x43, 0x55, 0x53, 0x10, 0x00,
	0x12, 0x1e, 0x0a, 0x1a, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x32, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x10, 0x01,
	0x2a, 0x3d, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x16, 0x0a, 0x12, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x43,
	0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x6e, 0x6f, 0x74, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x01, 0x2a,
	0x31, 0x0a, 0x09, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x6f, 0x65, 0x12, 0x10, 0x0a, 0x0c,
	0x63, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x6f, 0x65, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x12,
	0x0a, 0x0e, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x6f, 0x65, 0x5f, 0x46, 0x41, 0x43, 0x45,
	0x10, 0x01, 0x2a, 0xfb, 0x01, 0x0a, 0x15, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x23, 0x0a, 0x1f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x5f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x24, 0x0a, 0x20, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x45, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x01, 0x12, 0x23, 0x0a, 0x1f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x10, 0x02, 0x12, 0x25, 0x0a, 0x21,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x5f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x41, 0x56, 0x41, 0x54, 0x41,
	0x52, 0x10, 0x03, 0x12, 0x27, 0x0a, 0x23, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x4e, 0x49, 0x43, 0x4b, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x04, 0x12, 0x22, 0x0a, 0x1e,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x5f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x45, 0x58, 0x10, 0x05,
	0x2a, 0xbc, 0x02, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x12, 0x6c, 0x6f, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x5f, 0x55,
	0x53, 0x45, 0x52, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x6c, 0x6f, 0x67, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x01, 0x12,
	0x18, 0x0a, 0x14, 0x6c, 0x6f, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x55, 0x50, 0x44, 0x41,
	0x54, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x6c, 0x6f, 0x67,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x6c, 0x6f, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x4c,
	0x4f, 0x47, 0x4f, 0x55, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14,
	0x6c, 0x6f, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x53, 0x55, 0x42, 0x4d, 0x49, 0x54, 0x5f,
	0x43, 0x45, 0x52, 0x54, 0x10, 0x05, 0x12, 0x18, 0x0a, 0x14, 0x6c, 0x6f, 0x67, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x5f, 0x43, 0x45, 0x52, 0x54, 0x10, 0x06,
	0x12, 0x16, 0x0a, 0x12, 0x6c, 0x6f, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x43, 0x45, 0x52,
	0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x07, 0x12, 0x19, 0x0a, 0x15, 0x6c, 0x6f, 0x67, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x43, 0x45, 0x52, 0x54, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53,
	0x53, 0x10, 0x08, 0x12, 0x18, 0x0a, 0x14, 0x6c, 0x6f, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x56, 0x49, 0x50, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x55, 0x50, 0x10, 0x09, 0x12, 0x18, 0x0a,
	0x14, 0x6c, 0x6f, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x43, 0x4f, 0x49, 0x4e, 0x5f, 0x41,
	0x50, 0x50, 0x45, 0x4e, 0x44, 0x10, 0x0a, 0x12, 0x16, 0x0a, 0x12, 0x6c, 0x6f, 0x67, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x43, 0x4f, 0x49, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x44, 0x10, 0x0b, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_proto_rawDescOnce sync.Once
	file_common_proto_rawDescData = file_common_proto_rawDesc
)

func file_common_proto_rawDescGZIP() []byte {
	file_common_proto_rawDescOnce.Do(func() {
		file_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_proto_rawDescData)
	})
	return file_common_proto_rawDescData
}

var file_common_proto_enumTypes = make([]protoimpl.EnumInfo, 12)
var file_common_proto_msgTypes = make([]protoimpl.MessageInfo, 55)
var file_common_proto_goTypes = []interface{}{
	(Role)(0),                    // 0: common.Role
	(VipLevel)(0),                // 1: common.vip_level
	(UserStatus)(0),              // 2: common.user_status
	(FromPlatom)(0),              // 3: common.from_platom
	(SearchTyle)(0),              // 4: common.search_tyle
	(ApproveDest)(0),             // 5: common.approve_dest
	(TeacherStatus)(0),           // 6: common.teacher_status
	(Teacher2UserStatus)(0),      // 7: common.teacher2user_status
	(NoteStatus)(0),              // 8: common.note_status
	(CertTyoe)(0),                // 9: common.cert_tyoe
	(UpdateUserinfoField)(0),     // 10: common.update_userinfo_field
	(LogType)(0),                 // 11: common.log_type
	(*Authorize)(nil),            // 12: common.authorize
	(*Request)(nil),              // 13: common.Request
	(*Response)(nil),             // 14: common.Response
	(*UpdateUserinfoItem)(nil),   // 15: common.update_userinfo_item
	(*QuestionQuery)(nil),        // 16: common.question_query
	(*VersionItem)(nil),          // 17: common.version_item
	(*QuestionOption)(nil),       // 18: common.question_option
	(*Question)(nil),             // 19: common.question
	(*TimuItem)(nil),             // 20: common.timu_item
	(*TixingItem)(nil),           // 21: common.tixing_item
	(*SourceItem)(nil),           // 22: common.source_item
	(*ChapterItem)(nil),          // 23: common.chapter_item
	(*ModifyMeta)(nil),           // 24: common.modify_meta
	(*ModifyItem)(nil),           // 25: common.modify_item
	(*SearchHitsTotal)(nil),      // 26: common.search_hits_total
	(*HighItem)(nil),             // 27: common.high_item
	(*SearchHitsItem)(nil),       // 28: common.search_hits_item
	(*SearchHits)(nil),           // 29: common.search_hits
	(*SearchShards)(nil),         // 30: common.search_shards
	(*SearchTopic)(nil),          // 31: common.search_topic
	(*GradeCate)(nil),            // 32: common.grade_cate
	(*SchoolStatic)(nil),         // 33: common.school_static
	(*GradeItem)(nil),            // 34: common.grade_item
	(*GradeSubject)(nil),         // 35: common.grade_subject
	(*SchoolRoll)(nil),           // 36: common.school_roll
	(*SubjectCate)(nil),          // 37: common.subject_cate
	(*SearchHistoryItem)(nil),    // 38: common.search_history_item
	(*UserInfo)(nil),             // 39: common.user_info
	(*WechatUserinfo)(nil),       // 40: common.wechat_userinfo
	(*AlipayUserinfo)(nil),       // 41: common.alipay_userinfo
	(*BaiduConcept)(nil),         // 42: common.baidu_concept
	(*BaiduEntity)(nil),          // 43: common.baidu_entity
	(*AddTimuItem)(nil),          // 44: common.add_timu_item
	(*BaiduWordLocation)(nil),    // 45: common.baidu_word_location
	(*BaiduLineProbability)(nil), // 46: common.baidu_line_probability
	(*BaiduWordsItem)(nil),       // 47: common.baidu_words_item
	(*BaiduResultItem)(nil),      // 48: common.baidu_result_item
	(*BaiduDocAnalysis)(nil),     // 49: common.baidu_doc_analysis
	(*BaiduIdentItem)(nil),       // 50: common.baidu_ident_item
	(*NoteMeta)(nil),             // 51: common.note_meta
	(*NoteTag)(nil),              // 52: common.note_tag
	(*PersonCert)(nil),           // 53: common.person_cert
	(*BaiduIdcardIdent)(nil),     // 54: common.baidu_idcard_ident
	(*UserLog)(nil),              // 55: common.user_log
	(*CronItem)(nil),             // 56: common.cron_item
	nil,                          // 57: common.authorize.ExtraEntry
	nil,                          // 58: common.Request.ExtraEntry
	nil,                          // 59: common.Response.ExtraEntry
	nil,                          // 60: common.update_userinfo_item.ExtraEntry
	nil,                          // 61: common.question_query.ExtraEntry
	nil,                          // 62: common.search_hits_item.HighLightEntry
	nil,                          // 63: common.search_history_item.ExtraEntry
	nil,                          // 64: common.person_cert.ExtraEntry
	nil,                          // 65: common.baidu_idcard_ident.ExtraEntry
	nil,                          // 66: common.cron_item.ExtraEntry
}
var file_common_proto_depIdxs = []int32{
	57, // 0: common.authorize.extra:type_name -> common.authorize.ExtraEntry
	58, // 1: common.Request.extra:type_name -> common.Request.ExtraEntry
	59, // 2: common.Response.extra:type_name -> common.Response.ExtraEntry
	10, // 3: common.update_userinfo_item.field:type_name -> common.update_userinfo_field
	60, // 4: common.update_userinfo_item.extra:type_name -> common.update_userinfo_item.ExtraEntry
	61, // 5: common.question_query.extra:type_name -> common.question_query.ExtraEntry
	18, // 6: common.question.options:type_name -> common.question_option
	19, // 7: common.timu_item.data:type_name -> common.question
	19, // 8: common.modify_item.source:type_name -> common.question
	19, // 9: common.modify_item.data:type_name -> common.question
	24, // 10: common.modify_item.meta:type_name -> common.modify_meta
	20, // 11: common.search_hits_item.source:type_name -> common.timu_item
	62, // 12: common.search_hits_item.high_light:type_name -> common.search_hits_item.HighLightEntry
	26, // 13: common.search_hits.total:type_name -> common.search_hits_total
	28, // 14: common.search_hits.hits:type_name -> common.search_hits_item
	30, // 15: common.search_topic.shards:type_name -> common.search_shards
	29, // 16: common.search_topic.hits:type_name -> common.search_hits
	34, // 17: common.grade_subject.subjects:type_name -> common.grade_item
	63, // 18: common.search_history_item.extra:type_name -> common.search_history_item.ExtraEntry
	42, // 19: common.baidu_entity.concept:type_name -> common.baidu_concept
	19, // 20: common.add_timu_item.data:type_name -> common.question
	45, // 21: common.baidu_words_item.location:type_name -> common.baidu_word_location
	46, // 22: common.baidu_words_item.probability:type_name -> common.baidu_line_probability
	47, // 23: common.baidu_result_item.word:type_name -> common.baidu_words_item
	48, // 24: common.baidu_doc_analysis.results:type_name -> common.baidu_result_item
	49, // 25: common.baidu_ident_item.result:type_name -> common.baidu_doc_analysis
	64, // 26: common.person_cert.extra:type_name -> common.person_cert.ExtraEntry
	65, // 27: common.baidu_idcard_ident.extra:type_name -> common.baidu_idcard_ident.ExtraEntry
	66, // 28: common.cron_item.extra:type_name -> common.cron_item.ExtraEntry
	27, // 29: common.search_hits_item.HighLightEntry.value:type_name -> common.high_item
	30, // [30:30] is the sub-list for method output_type
	30, // [30:30] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_common_proto_init() }
func file_common_proto_init() {
	if File_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Authorize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserinfoItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Question); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimuItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TixingItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChapterItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchHitsTotal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HighItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchHitsItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchHits); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchShards); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchTopic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GradeCate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchoolStatic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GradeItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GradeSubject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchoolRoll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubjectCate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchHistoryItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatUserinfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlipayUserinfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaiduConcept); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaiduEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTimuItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaiduWordLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaiduLineProbability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaiduWordsItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaiduResultItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaiduDocAnalysis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaiduIdentItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoteMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoteTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PersonCert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaiduIdcardIdent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CronItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_proto_rawDesc,
			NumEnums:      12,
			NumMessages:   55,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_proto_goTypes,
		DependencyIndexes: file_common_proto_depIdxs,
		EnumInfos:         file_common_proto_enumTypes,
		MessageInfos:      file_common_proto_msgTypes,
	}.Build()
	File_common_proto = out.File
	file_common_proto_rawDesc = nil
	file_common_proto_goTypes = nil
	file_common_proto_depIdxs = nil
}
